package com.hl.contract.table.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.hl.contract.table.model.ReportInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "REPORT_INFO".
*/
public class ReportInfoDao extends AbstractDao<ReportInfo, String> {

    public static final String TABLENAME = "REPORT_INFO";

    /**
     * Properties of entity ReportInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property UserId = new Property(1, String.class, "userId", false, "USER_ID");
        public final static Property ReportCode = new Property(2, String.class, "reportCode", false, "REPORT_CODE");
        public final static Property AccidentCauseCode = new Property(3, String.class, "accidentCauseCode", false, "ACCIDENT_CAUSE_CODE");
        public final static Property AccidentCauseName = new Property(4, String.class, "accidentCauseName", false, "ACCIDENT_CAUSE_NAME");
        public final static Property AccidentDutyCode = new Property(5, String.class, "accidentDutyCode", false, "ACCIDENT_DUTY_CODE");
        public final static Property AccidentDutyName = new Property(6, String.class, "accidentDutyName", false, "ACCIDENT_DUTY_NAME");
        public final static Property ReportPersonName = new Property(7, String.class, "reportPersonName", false, "REPORT_PERSON_NAME");
        public final static Property ReportMoblePhone = new Property(8, String.class, "reportMoblePhone", false, "REPORT_MOBLE_PHONE");
        public final static Property ReportTime = new Property(9, String.class, "reportTime", false, "REPORT_TIME");
        public final static Property AccidentTime = new Property(10, String.class, "accidentTime", false, "ACCIDENT_TIME");
        public final static Property IsCurrentReport = new Property(11, String.class, "isCurrentReport", false, "IS_CURRENT_REPORT");
        public final static Property ManageType = new Property(12, String.class, "manageType", false, "MANAGE_TYPE");
        public final static Property AccidentReasonCode = new Property(13, String.class, "accidentReasonCode", false, "ACCIDENT_REASON_CODE");
        public final static Property AccidentReasonName = new Property(14, String.class, "accidentReasonName", false, "ACCIDENT_REASON_NAME");
        public final static Property HugeType = new Property(15, String.class, "hugeType", false, "HUGE_TYPE");
        public final static Property HugeTypeName = new Property(16, String.class, "hugeTypeName", false, "HUGE_TYPE_NAME");
        public final static Property HugeCode = new Property(17, String.class, "hugeCode", false, "HUGE_CODE");
        public final static Property HugeName = new Property(18, String.class, "hugeName", false, "HUGE_NAME");
        public final static Property InsuranceCompanyCode = new Property(19, String.class, "insuranceCompanyCode", false, "INSURANCE_COMPANY_CODE");
        public final static Property InsuranceCompanyName = new Property(20, String.class, "insuranceCompanyName", false, "INSURANCE_COMPANY_NAME");
        public final static Property ReportType = new Property(21, String.class, "reportType", false, "REPORT_TYPE");
        public final static Property AccidentPlace = new Property(22, String.class, "accidentPlace", false, "ACCIDENT_PLACE");
        public final static Property Longitude = new Property(23, String.class, "longitude", false, "LONGITUDE");
        public final static Property Latitude = new Property(24, String.class, "latitude", false, "LATITUDE");
        public final static Property AccidentCourse = new Property(25, String.class, "accidentCourse", false, "ACCIDENT_COURSE");
        public final static Property CarLossFlag = new Property(26, String.class, "carLossFlag", false, "CAR_LOSS_FLAG");
        public final static Property InjureLossFlag = new Property(27, String.class, "injureLossFlag", false, "INJURE_LOSS_FLAG");
        public final static Property CargoLossFlag = new Property(28, String.class, "cargoLossFlag", false, "CARGO_LOSS_FLAG");
        public final static Property ThiefLossFlag = new Property(29, String.class, "thiefLossFlag", false, "THIEF_LOSS_FLAG");
        public final static Property InjureNum = new Property(30, Long.class, "injureNum", false, "INJURE_NUM");
        public final static Property AccidentArea = new Property(31, String.class, "accidentArea", false, "ACCIDENT_AREA");
        public final static Property AccidentWeather = new Property(32, String.class, "accidentWeather", false, "ACCIDENT_WEATHER");
        public final static Property ChannelCode = new Property(33, String.class, "channelCode", false, "CHANNEL_CODE");
        public final static Property ChannelName = new Property(34, String.class, "channelName", false, "CHANNEL_NAME");
        public final static Property CompleteDegree = new Property(35, double.class, "completeDegree", false, "COMPLETE_DEGREE");
        public final static Property CompleteFlag = new Property(36, String.class, "completeFlag", false, "COMPLETE_FLAG");
        public final static Property SurveyFlag = new Property(37, String.class, "surveyFlag", false, "SURVEY_FLAG");
        public final static Property AimCarFlag = new Property(38, String.class, "aimCarFlag", false, "AIM_CAR_FLAG");
        public final static Property DamageFlag = new Property(39, String.class, "damageFlag", false, "DAMAGE_FLAG");
        public final static Property ThirdCarFlag = new Property(40, String.class, "thirdCarFlag", false, "THIRD_CAR_FLAG");
        public final static Property InjuryFlag = new Property(41, String.class, "injuryFlag", false, "INJURY_FLAG");
        public final static Property PlateNum = new Property(42, String.class, "plateNum", false, "PLATE_NUM");
        public final static Property ReportId = new Property(43, String.class, "reportId", false, "REPORT_ID");
    }


    public ReportInfoDao(DaoConfig config) {
        super(config);
    }
    
    public ReportInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"REPORT_INFO\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"USER_ID\" TEXT," + // 1: userId
                "\"REPORT_CODE\" TEXT," + // 2: reportCode
                "\"ACCIDENT_CAUSE_CODE\" TEXT," + // 3: accidentCauseCode
                "\"ACCIDENT_CAUSE_NAME\" TEXT," + // 4: accidentCauseName
                "\"ACCIDENT_DUTY_CODE\" TEXT," + // 5: accidentDutyCode
                "\"ACCIDENT_DUTY_NAME\" TEXT," + // 6: accidentDutyName
                "\"REPORT_PERSON_NAME\" TEXT," + // 7: reportPersonName
                "\"REPORT_MOBLE_PHONE\" TEXT," + // 8: reportMoblePhone
                "\"REPORT_TIME\" TEXT," + // 9: reportTime
                "\"ACCIDENT_TIME\" TEXT," + // 10: accidentTime
                "\"IS_CURRENT_REPORT\" TEXT," + // 11: isCurrentReport
                "\"MANAGE_TYPE\" TEXT," + // 12: manageType
                "\"ACCIDENT_REASON_CODE\" TEXT," + // 13: accidentReasonCode
                "\"ACCIDENT_REASON_NAME\" TEXT," + // 14: accidentReasonName
                "\"HUGE_TYPE\" TEXT," + // 15: hugeType
                "\"HUGE_TYPE_NAME\" TEXT," + // 16: hugeTypeName
                "\"HUGE_CODE\" TEXT," + // 17: hugeCode
                "\"HUGE_NAME\" TEXT," + // 18: hugeName
                "\"INSURANCE_COMPANY_CODE\" TEXT," + // 19: insuranceCompanyCode
                "\"INSURANCE_COMPANY_NAME\" TEXT," + // 20: insuranceCompanyName
                "\"REPORT_TYPE\" TEXT," + // 21: reportType
                "\"ACCIDENT_PLACE\" TEXT," + // 22: accidentPlace
                "\"LONGITUDE\" TEXT," + // 23: longitude
                "\"LATITUDE\" TEXT," + // 24: latitude
                "\"ACCIDENT_COURSE\" TEXT," + // 25: accidentCourse
                "\"CAR_LOSS_FLAG\" TEXT," + // 26: carLossFlag
                "\"INJURE_LOSS_FLAG\" TEXT," + // 27: injureLossFlag
                "\"CARGO_LOSS_FLAG\" TEXT," + // 28: cargoLossFlag
                "\"THIEF_LOSS_FLAG\" TEXT," + // 29: thiefLossFlag
                "\"INJURE_NUM\" INTEGER," + // 30: injureNum
                "\"ACCIDENT_AREA\" TEXT," + // 31: accidentArea
                "\"ACCIDENT_WEATHER\" TEXT," + // 32: accidentWeather
                "\"CHANNEL_CODE\" TEXT," + // 33: channelCode
                "\"CHANNEL_NAME\" TEXT," + // 34: channelName
                "\"COMPLETE_DEGREE\" REAL NOT NULL ," + // 35: completeDegree
                "\"COMPLETE_FLAG\" TEXT," + // 36: completeFlag
                "\"SURVEY_FLAG\" TEXT," + // 37: surveyFlag
                "\"AIM_CAR_FLAG\" TEXT," + // 38: aimCarFlag
                "\"DAMAGE_FLAG\" TEXT," + // 39: damageFlag
                "\"THIRD_CAR_FLAG\" TEXT," + // 40: thirdCarFlag
                "\"INJURY_FLAG\" TEXT," + // 41: injuryFlag
                "\"PLATE_NUM\" TEXT," + // 42: plateNum
                "\"REPORT_ID\" TEXT);"); // 43: reportId
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"REPORT_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ReportInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(3, reportCode);
        }
 
        String accidentCauseCode = entity.getAccidentCauseCode();
        if (accidentCauseCode != null) {
            stmt.bindString(4, accidentCauseCode);
        }
 
        String accidentCauseName = entity.getAccidentCauseName();
        if (accidentCauseName != null) {
            stmt.bindString(5, accidentCauseName);
        }
 
        String accidentDutyCode = entity.getAccidentDutyCode();
        if (accidentDutyCode != null) {
            stmt.bindString(6, accidentDutyCode);
        }
 
        String accidentDutyName = entity.getAccidentDutyName();
        if (accidentDutyName != null) {
            stmt.bindString(7, accidentDutyName);
        }
 
        String reportPersonName = entity.getReportPersonName();
        if (reportPersonName != null) {
            stmt.bindString(8, reportPersonName);
        }
 
        String reportMoblePhone = entity.getReportMoblePhone();
        if (reportMoblePhone != null) {
            stmt.bindString(9, reportMoblePhone);
        }
 
        String reportTime = entity.getReportTime();
        if (reportTime != null) {
            stmt.bindString(10, reportTime);
        }
 
        String accidentTime = entity.getAccidentTime();
        if (accidentTime != null) {
            stmt.bindString(11, accidentTime);
        }
 
        String isCurrentReport = entity.getIsCurrentReport();
        if (isCurrentReport != null) {
            stmt.bindString(12, isCurrentReport);
        }
 
        String manageType = entity.getManageType();
        if (manageType != null) {
            stmt.bindString(13, manageType);
        }
 
        String accidentReasonCode = entity.getAccidentReasonCode();
        if (accidentReasonCode != null) {
            stmt.bindString(14, accidentReasonCode);
        }
 
        String accidentReasonName = entity.getAccidentReasonName();
        if (accidentReasonName != null) {
            stmt.bindString(15, accidentReasonName);
        }
 
        String hugeType = entity.getHugeType();
        if (hugeType != null) {
            stmt.bindString(16, hugeType);
        }
 
        String hugeTypeName = entity.getHugeTypeName();
        if (hugeTypeName != null) {
            stmt.bindString(17, hugeTypeName);
        }
 
        String hugeCode = entity.getHugeCode();
        if (hugeCode != null) {
            stmt.bindString(18, hugeCode);
        }
 
        String hugeName = entity.getHugeName();
        if (hugeName != null) {
            stmt.bindString(19, hugeName);
        }
 
        String insuranceCompanyCode = entity.getInsuranceCompanyCode();
        if (insuranceCompanyCode != null) {
            stmt.bindString(20, insuranceCompanyCode);
        }
 
        String insuranceCompanyName = entity.getInsuranceCompanyName();
        if (insuranceCompanyName != null) {
            stmt.bindString(21, insuranceCompanyName);
        }
 
        String reportType = entity.getReportType();
        if (reportType != null) {
            stmt.bindString(22, reportType);
        }
 
        String accidentPlace = entity.getAccidentPlace();
        if (accidentPlace != null) {
            stmt.bindString(23, accidentPlace);
        }
 
        String longitude = entity.getLongitude();
        if (longitude != null) {
            stmt.bindString(24, longitude);
        }
 
        String latitude = entity.getLatitude();
        if (latitude != null) {
            stmt.bindString(25, latitude);
        }
 
        String accidentCourse = entity.getAccidentCourse();
        if (accidentCourse != null) {
            stmt.bindString(26, accidentCourse);
        }
 
        String carLossFlag = entity.getCarLossFlag();
        if (carLossFlag != null) {
            stmt.bindString(27, carLossFlag);
        }
 
        String injureLossFlag = entity.getInjureLossFlag();
        if (injureLossFlag != null) {
            stmt.bindString(28, injureLossFlag);
        }
 
        String cargoLossFlag = entity.getCargoLossFlag();
        if (cargoLossFlag != null) {
            stmt.bindString(29, cargoLossFlag);
        }
 
        String thiefLossFlag = entity.getThiefLossFlag();
        if (thiefLossFlag != null) {
            stmt.bindString(30, thiefLossFlag);
        }
 
        Long injureNum = entity.getInjureNum();
        if (injureNum != null) {
            stmt.bindLong(31, injureNum);
        }
 
        String accidentArea = entity.getAccidentArea();
        if (accidentArea != null) {
            stmt.bindString(32, accidentArea);
        }
 
        String accidentWeather = entity.getAccidentWeather();
        if (accidentWeather != null) {
            stmt.bindString(33, accidentWeather);
        }
 
        String channelCode = entity.getChannelCode();
        if (channelCode != null) {
            stmt.bindString(34, channelCode);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(35, channelName);
        }
        stmt.bindDouble(36, entity.getCompleteDegree());
 
        String completeFlag = entity.getCompleteFlag();
        if (completeFlag != null) {
            stmt.bindString(37, completeFlag);
        }
 
        String surveyFlag = entity.getSurveyFlag();
        if (surveyFlag != null) {
            stmt.bindString(38, surveyFlag);
        }
 
        String aimCarFlag = entity.getAimCarFlag();
        if (aimCarFlag != null) {
            stmt.bindString(39, aimCarFlag);
        }
 
        String damageFlag = entity.getDamageFlag();
        if (damageFlag != null) {
            stmt.bindString(40, damageFlag);
        }
 
        String thirdCarFlag = entity.getThirdCarFlag();
        if (thirdCarFlag != null) {
            stmt.bindString(41, thirdCarFlag);
        }
 
        String injuryFlag = entity.getInjuryFlag();
        if (injuryFlag != null) {
            stmt.bindString(42, injuryFlag);
        }
 
        String plateNum = entity.getPlateNum();
        if (plateNum != null) {
            stmt.bindString(43, plateNum);
        }
 
        String reportId = entity.getReportId();
        if (reportId != null) {
            stmt.bindString(44, reportId);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ReportInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(3, reportCode);
        }
 
        String accidentCauseCode = entity.getAccidentCauseCode();
        if (accidentCauseCode != null) {
            stmt.bindString(4, accidentCauseCode);
        }
 
        String accidentCauseName = entity.getAccidentCauseName();
        if (accidentCauseName != null) {
            stmt.bindString(5, accidentCauseName);
        }
 
        String accidentDutyCode = entity.getAccidentDutyCode();
        if (accidentDutyCode != null) {
            stmt.bindString(6, accidentDutyCode);
        }
 
        String accidentDutyName = entity.getAccidentDutyName();
        if (accidentDutyName != null) {
            stmt.bindString(7, accidentDutyName);
        }
 
        String reportPersonName = entity.getReportPersonName();
        if (reportPersonName != null) {
            stmt.bindString(8, reportPersonName);
        }
 
        String reportMoblePhone = entity.getReportMoblePhone();
        if (reportMoblePhone != null) {
            stmt.bindString(9, reportMoblePhone);
        }
 
        String reportTime = entity.getReportTime();
        if (reportTime != null) {
            stmt.bindString(10, reportTime);
        }
 
        String accidentTime = entity.getAccidentTime();
        if (accidentTime != null) {
            stmt.bindString(11, accidentTime);
        }
 
        String isCurrentReport = entity.getIsCurrentReport();
        if (isCurrentReport != null) {
            stmt.bindString(12, isCurrentReport);
        }
 
        String manageType = entity.getManageType();
        if (manageType != null) {
            stmt.bindString(13, manageType);
        }
 
        String accidentReasonCode = entity.getAccidentReasonCode();
        if (accidentReasonCode != null) {
            stmt.bindString(14, accidentReasonCode);
        }
 
        String accidentReasonName = entity.getAccidentReasonName();
        if (accidentReasonName != null) {
            stmt.bindString(15, accidentReasonName);
        }
 
        String hugeType = entity.getHugeType();
        if (hugeType != null) {
            stmt.bindString(16, hugeType);
        }
 
        String hugeTypeName = entity.getHugeTypeName();
        if (hugeTypeName != null) {
            stmt.bindString(17, hugeTypeName);
        }
 
        String hugeCode = entity.getHugeCode();
        if (hugeCode != null) {
            stmt.bindString(18, hugeCode);
        }
 
        String hugeName = entity.getHugeName();
        if (hugeName != null) {
            stmt.bindString(19, hugeName);
        }
 
        String insuranceCompanyCode = entity.getInsuranceCompanyCode();
        if (insuranceCompanyCode != null) {
            stmt.bindString(20, insuranceCompanyCode);
        }
 
        String insuranceCompanyName = entity.getInsuranceCompanyName();
        if (insuranceCompanyName != null) {
            stmt.bindString(21, insuranceCompanyName);
        }
 
        String reportType = entity.getReportType();
        if (reportType != null) {
            stmt.bindString(22, reportType);
        }
 
        String accidentPlace = entity.getAccidentPlace();
        if (accidentPlace != null) {
            stmt.bindString(23, accidentPlace);
        }
 
        String longitude = entity.getLongitude();
        if (longitude != null) {
            stmt.bindString(24, longitude);
        }
 
        String latitude = entity.getLatitude();
        if (latitude != null) {
            stmt.bindString(25, latitude);
        }
 
        String accidentCourse = entity.getAccidentCourse();
        if (accidentCourse != null) {
            stmt.bindString(26, accidentCourse);
        }
 
        String carLossFlag = entity.getCarLossFlag();
        if (carLossFlag != null) {
            stmt.bindString(27, carLossFlag);
        }
 
        String injureLossFlag = entity.getInjureLossFlag();
        if (injureLossFlag != null) {
            stmt.bindString(28, injureLossFlag);
        }
 
        String cargoLossFlag = entity.getCargoLossFlag();
        if (cargoLossFlag != null) {
            stmt.bindString(29, cargoLossFlag);
        }
 
        String thiefLossFlag = entity.getThiefLossFlag();
        if (thiefLossFlag != null) {
            stmt.bindString(30, thiefLossFlag);
        }
 
        Long injureNum = entity.getInjureNum();
        if (injureNum != null) {
            stmt.bindLong(31, injureNum);
        }
 
        String accidentArea = entity.getAccidentArea();
        if (accidentArea != null) {
            stmt.bindString(32, accidentArea);
        }
 
        String accidentWeather = entity.getAccidentWeather();
        if (accidentWeather != null) {
            stmt.bindString(33, accidentWeather);
        }
 
        String channelCode = entity.getChannelCode();
        if (channelCode != null) {
            stmt.bindString(34, channelCode);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(35, channelName);
        }
        stmt.bindDouble(36, entity.getCompleteDegree());
 
        String completeFlag = entity.getCompleteFlag();
        if (completeFlag != null) {
            stmt.bindString(37, completeFlag);
        }
 
        String surveyFlag = entity.getSurveyFlag();
        if (surveyFlag != null) {
            stmt.bindString(38, surveyFlag);
        }
 
        String aimCarFlag = entity.getAimCarFlag();
        if (aimCarFlag != null) {
            stmt.bindString(39, aimCarFlag);
        }
 
        String damageFlag = entity.getDamageFlag();
        if (damageFlag != null) {
            stmt.bindString(40, damageFlag);
        }
 
        String thirdCarFlag = entity.getThirdCarFlag();
        if (thirdCarFlag != null) {
            stmt.bindString(41, thirdCarFlag);
        }
 
        String injuryFlag = entity.getInjuryFlag();
        if (injuryFlag != null) {
            stmt.bindString(42, injuryFlag);
        }
 
        String plateNum = entity.getPlateNum();
        if (plateNum != null) {
            stmt.bindString(43, plateNum);
        }
 
        String reportId = entity.getReportId();
        if (reportId != null) {
            stmt.bindString(44, reportId);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public ReportInfo readEntity(Cursor cursor, int offset) {
        ReportInfo entity = new ReportInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // userId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // reportCode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // accidentCauseCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // accidentCauseName
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // accidentDutyCode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // accidentDutyName
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // reportPersonName
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // reportMoblePhone
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // reportTime
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // accidentTime
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // isCurrentReport
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // manageType
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // accidentReasonCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // accidentReasonName
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // hugeType
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // hugeTypeName
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // hugeCode
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // hugeName
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // insuranceCompanyCode
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // insuranceCompanyName
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // reportType
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // accidentPlace
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // longitude
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // latitude
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // accidentCourse
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // carLossFlag
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // injureLossFlag
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // cargoLossFlag
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // thiefLossFlag
            cursor.isNull(offset + 30) ? null : cursor.getLong(offset + 30), // injureNum
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // accidentArea
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // accidentWeather
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // channelCode
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // channelName
            cursor.getDouble(offset + 35), // completeDegree
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // completeFlag
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // surveyFlag
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // aimCarFlag
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // damageFlag
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // thirdCarFlag
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // injuryFlag
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // plateNum
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43) // reportId
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ReportInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setUserId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setReportCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setAccidentCauseCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAccidentCauseName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setAccidentDutyCode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAccidentDutyName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setReportPersonName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setReportMoblePhone(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setReportTime(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setAccidentTime(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIsCurrentReport(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setManageType(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setAccidentReasonCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setAccidentReasonName(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setHugeType(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setHugeTypeName(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setHugeCode(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setHugeName(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setInsuranceCompanyCode(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setInsuranceCompanyName(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setReportType(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setAccidentPlace(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setLongitude(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setLatitude(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setAccidentCourse(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setCarLossFlag(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setInjureLossFlag(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCargoLossFlag(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setThiefLossFlag(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setInjureNum(cursor.isNull(offset + 30) ? null : cursor.getLong(offset + 30));
        entity.setAccidentArea(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setAccidentWeather(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setChannelCode(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setChannelName(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCompleteDegree(cursor.getDouble(offset + 35));
        entity.setCompleteFlag(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setSurveyFlag(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setAimCarFlag(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setDamageFlag(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setThirdCarFlag(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setInjuryFlag(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setPlateNum(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setReportId(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
     }
    
    @Override
    protected final String updateKeyAfterInsert(ReportInfo entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public String getKey(ReportInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ReportInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
