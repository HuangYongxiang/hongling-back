package com.hl.contract.table.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.hl.contract.table.model.Contract;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CONTRACT".
*/
public class ContractDao extends AbstractDao<Contract, String> {

    public static final String TABLENAME = "CONTRACT";

    /**
     * Properties of entity Contract.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property UserId = new Property(1, String.class, "userId", false, "USER_ID");
        public final static Property EvalId = new Property(2, String.class, "evalId", false, "EVAL_ID");
        public final static Property ReportCode = new Property(3, String.class, "reportCode", false, "REPORT_CODE");
        public final static Property OwnerName = new Property(4, String.class, "ownerName", false, "OWNER_NAME");
        public final static Property OwnerSex = new Property(5, String.class, "ownerSex", false, "OWNER_SEX");
        public final static Property OwnerCertificateType = new Property(6, String.class, "ownerCertificateType", false, "OWNER_CERTIFICATE_TYPE");
        public final static Property OwnerCertificateTypeCode = new Property(7, String.class, "ownerCertificateTypeCode", false, "OWNER_CERTIFICATE_TYPE_CODE");
        public final static Property OwnerCertificateNo = new Property(8, String.class, "ownerCertificateNo", false, "OWNER_CERTIFICATE_NO");
        public final static Property OwnerTelePhone = new Property(9, String.class, "ownerTelePhone", false, "OWNER_TELE_PHONE");
        public final static Property OwnerEmail = new Property(10, String.class, "ownerEmail", false, "OWNER_EMAIL");
        public final static Property ProComCode = new Property(11, String.class, "proComCode", false, "PRO_COM_CODE");
        public final static Property ProComName = new Property(12, String.class, "proComName", false, "PRO_COM_NAME");
        public final static Property CityComCode = new Property(13, String.class, "cityComCode", false, "CITY_COM_CODE");
        public final static Property CityComName = new Property(14, String.class, "cityComName", false, "CITY_COM_NAME");
        public final static Property CountyComCode = new Property(15, String.class, "countyComCode", false, "COUNTY_COM_CODE");
        public final static Property CountyComName = new Property(16, String.class, "countyComName", false, "COUNTY_COM_NAME");
        public final static Property Region = new Property(17, String.class, "region", false, "REGION");
        public final static Property PlateNo = new Property(18, String.class, "plateNo", false, "PLATE_NO");
        public final static Property BrandName = new Property(19, String.class, "brandName", false, "BRAND_NAME");
        public final static Property BrandCode = new Property(20, String.class, "brandCode", false, "BRAND_CODE");
        public final static Property FamilyId = new Property(21, String.class, "familyId", false, "FAMILY_ID");
        public final static Property FamilyName = new Property(22, String.class, "familyName", false, "FAMILY_NAME");
        public final static Property FamilyCode = new Property(23, String.class, "familyCode", false, "FAMILY_CODE");
        public final static Property ModelName = new Property(24, String.class, "modelName", false, "MODEL_NAME");
        public final static Property ModelCode = new Property(25, String.class, "modelCode", false, "MODEL_CODE");
        public final static Property CarTelePhone = new Property(26, String.class, "carTelePhone", false, "CAR_TELE_PHONE");
        public final static Property CarEmail = new Property(27, String.class, "carEmail", false, "CAR_EMAIL");
        public final static Property VehiclePrice = new Property(28, Double.class, "vehiclePrice", false, "VEHICLE_PRICE");
        public final static Property EnrolDate = new Property(29, String.class, "enrolDate", false, "ENROL_DATE");
        public final static Property BuyCarDate = new Property(30, String.class, "buyCarDate", false, "BUY_CAR_DATE");
        public final static Property UsePropertyCode = new Property(31, String.class, "usePropertyCode", false, "USE_PROPERTY_CODE");
        public final static Property UsePropertyName = new Property(32, String.class, "usePropertyName", false, "USE_PROPERTY_NAME");
        public final static Property BatteryNumber = new Property(33, String.class, "batteryNumber", false, "BATTERY_NUMBER");
        public final static Property IsInsureCommercial = new Property(34, String.class, "isInsureCommercial", false, "IS_INSURE_COMMERCIAL");
        public final static Property CommercialCompany = new Property(35, String.class, "commercialCompany", false, "COMMERCIAL_COMPANY");
        public final static Property CommercialCompanyCode = new Property(36, String.class, "commercialCompanyCode", false, "COMMERCIAL_COMPANY_CODE");
        public final static Property PolicyNo = new Property(37, String.class, "policyNo", false, "POLICY_NO");
        public final static Property EngineNo = new Property(38, String.class, "engineNo", false, "ENGINE_NO");
        public final static Property VinNo = new Property(39, String.class, "vinNo", false, "VIN_NO");
        public final static Property Relation = new Property(40, String.class, "relation", false, "RELATION");
        public final static Property RelationCode = new Property(41, String.class, "relationCode", false, "RELATION_CODE");
        public final static Property ServiceName = new Property(42, String.class, "serviceName", false, "SERVICE_NAME");
        public final static Property ServiceSex = new Property(43, String.class, "serviceSex", false, "SERVICE_SEX");
        public final static Property ServiceCertificateType = new Property(44, String.class, "serviceCertificateType", false, "SERVICE_CERTIFICATE_TYPE");
        public final static Property ServiceCertificateTypeCode = new Property(45, String.class, "serviceCertificateTypeCode", false, "SERVICE_CERTIFICATE_TYPE_CODE");
        public final static Property ServiceCertificateNo = new Property(46, String.class, "serviceCertificateNo", false, "SERVICE_CERTIFICATE_NO");
        public final static Property ServiceTelePhone = new Property(47, String.class, "serviceTelePhone", false, "SERVICE_TELE_PHONE");
        public final static Property ServiceEmail = new Property(48, String.class, "serviceEmail", false, "SERVICE_EMAIL");
        public final static Property SerialNo = new Property(49, Integer.class, "serialNo", false, "SERIAL_NO");
        public final static Property AdditionalFlag = new Property(50, String.class, "additionalFlag", false, "ADDITIONAL_FLAG");
        public final static Property ExemptFlag = new Property(51, String.class, "exemptFlag", false, "EXEMPT_FLAG");
        public final static Property ProductCode = new Property(52, String.class, "productCode", false, "PRODUCT_CODE");
        public final static Property ProductName = new Property(53, String.class, "productName", false, "PRODUCT_NAME");
        public final static Property TermOfValidityDate = new Property(54, String.class, "termOfValidityDate", false, "TERM_OF_VALIDITY_DATE");
        public final static Property ServiceStartDate = new Property(55, String.class, "serviceStartDate", false, "SERVICE_START_DATE");
        public final static Property ServiceEndDate = new Property(56, String.class, "serviceEndDate", false, "SERVICE_END_DATE");
        public final static Property Mileage = new Property(57, String.class, "mileage", false, "MILEAGE");
        public final static Property AmountDamages = new Property(58, Double.class, "amountDamages", false, "AMOUNT_DAMAGES");
        public final static Property CarType = new Property(59, String.class, "carType", false, "CAR_TYPE");
        public final static Property CarTypeCode = new Property(60, String.class, "carTypeCode", false, "CAR_TYPE_CODE");
        public final static Property VehicleModel = new Property(61, String.class, "vehicleModel", false, "VEHICLE_MODEL");
        public final static Property VehicleModelCode = new Property(62, String.class, "vehicleModelCode", false, "VEHICLE_MODEL_CODE");
        public final static Property PlateType = new Property(63, String.class, "plateType", false, "PLATE_TYPE");
        public final static Property PlateTypeCode = new Property(64, String.class, "plateTypeCode", false, "PLATE_TYPE_CODE");
        public final static Property IsMainCarDamaged = new Property(65, String.class, "isMainCarDamaged", false, "IS_MAIN_CAR_DAMAGED");
        public final static Property DutyRatio = new Property(66, String.class, "dutyRatio", false, "DUTY_RATIO");
        public final static Property InsurancePolicyNo = new Property(67, String.class, "insurancePolicyNo", false, "INSURANCE_POLICY_NO");
        public final static Property InsuranceCompany = new Property(68, String.class, "insuranceCompany", false, "INSURANCE_COMPANY");
        public final static Property CommercialPolicyNo = new Property(69, String.class, "commercialPolicyNo", false, "COMMERCIAL_POLICY_NO");
        public final static Property Age = new Property(70, int.class, "age", false, "AGE");
        public final static Property LicenseNumber = new Property(71, String.class, "licenseNumber", false, "LICENSE_NUMBER");
        public final static Property DriveType = new Property(72, String.class, "driveType", false, "DRIVE_TYPE");
        public final static Property DriveTypeCode = new Property(73, String.class, "driveTypeCode", false, "DRIVE_TYPE_CODE");
        public final static Property DriverTerritorial = new Property(74, String.class, "driverTerritorial", false, "DRIVER_TERRITORIAL");
        public final static Property CertificationAuthority = new Property(75, String.class, "certificationAuthority", false, "CERTIFICATION_AUTHORITY");
        public final static Property DegreeOfEducation = new Property(76, String.class, "degreeOfEducation", false, "DEGREE_OF_EDUCATION");
        public final static Property Profession = new Property(77, String.class, "profession", false, "PROFESSION");
        public final static Property IssueDate = new Property(78, String.class, "issueDate", false, "ISSUE_DATE");
        public final static Property UnitOrAddress = new Property(79, String.class, "unitOrAddress", false, "UNIT_OR_ADDRESS");
        public final static Property VehicleType = new Property(80, String.class, "vehicleType", false, "VEHICLE_TYPE");
        public final static Property VehicleTypeCode = new Property(81, String.class, "vehicleTypeCode", false, "VEHICLE_TYPE_CODE");
        public final static Property UseProperty = new Property(82, String.class, "useProperty", false, "USE_PROPERTY");
        public final static Property RealPrice = new Property(83, Double.class, "realPrice", false, "REAL_PRICE");
        public final static Property IsImport = new Property(84, String.class, "isImport", false, "IS_IMPORT");
        public final static Property MakeDate = new Property(85, String.class, "makeDate", false, "MAKE_DATE");
        public final static Property Seat = new Property(86, int.class, "seat", false, "SEAT");
        public final static Property Powner = new Property(87, String.class, "powner", false, "POWNER");
        public final static Property Displacement = new Property(88, String.class, "displacement", false, "DISPLACEMENT");
        public final static Property Tonnage = new Property(89, Double.class, "tonnage", false, "TONNAGE");
        public final static Property CarColor = new Property(90, String.class, "carColor", false, "CAR_COLOR");
        public final static Property PlateColor = new Property(91, String.class, "plateColor", false, "PLATE_COLOR");
        public final static Property PlateColorCode = new Property(92, String.class, "plateColorCode", false, "PLATE_COLOR_CODE");
        public final static Property GuardAlarm = new Property(93, String.class, "guardAlarm", false, "GUARD_ALARM");
        public final static Property DriverArea = new Property(94, String.class, "driverArea", false, "DRIVER_AREA");
        public final static Property DiscountType = new Property(95, String.class, "discountType", false, "DISCOUNT_TYPE");
        public final static Property MotorNum = new Property(96, String.class, "motorNum", false, "MOTOR_NUM");
        public final static Property YanbaoStartMiles = new Property(97, String.class, "yanbaoStartMiles", false, "YANBAO_START_MILES");
        public final static Property Address = new Property(98, String.class, "address", false, "ADDRESS");
        public final static Property ProductType = new Property(99, String.class, "productType", false, "PRODUCT_TYPE");
        public final static Property ProductTypeCode = new Property(100, String.class, "productTypeCode", false, "PRODUCT_TYPE_CODE");
    }


    public ContractDao(DaoConfig config) {
        super(config);
    }
    
    public ContractDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CONTRACT\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"USER_ID\" TEXT," + // 1: userId
                "\"EVAL_ID\" TEXT," + // 2: evalId
                "\"REPORT_CODE\" TEXT," + // 3: reportCode
                "\"OWNER_NAME\" TEXT," + // 4: ownerName
                "\"OWNER_SEX\" TEXT," + // 5: ownerSex
                "\"OWNER_CERTIFICATE_TYPE\" TEXT," + // 6: ownerCertificateType
                "\"OWNER_CERTIFICATE_TYPE_CODE\" TEXT," + // 7: ownerCertificateTypeCode
                "\"OWNER_CERTIFICATE_NO\" TEXT," + // 8: ownerCertificateNo
                "\"OWNER_TELE_PHONE\" TEXT," + // 9: ownerTelePhone
                "\"OWNER_EMAIL\" TEXT," + // 10: ownerEmail
                "\"PRO_COM_CODE\" TEXT," + // 11: proComCode
                "\"PRO_COM_NAME\" TEXT," + // 12: proComName
                "\"CITY_COM_CODE\" TEXT," + // 13: cityComCode
                "\"CITY_COM_NAME\" TEXT," + // 14: cityComName
                "\"COUNTY_COM_CODE\" TEXT," + // 15: countyComCode
                "\"COUNTY_COM_NAME\" TEXT," + // 16: countyComName
                "\"REGION\" TEXT," + // 17: region
                "\"PLATE_NO\" TEXT," + // 18: plateNo
                "\"BRAND_NAME\" TEXT," + // 19: brandName
                "\"BRAND_CODE\" TEXT," + // 20: brandCode
                "\"FAMILY_ID\" TEXT," + // 21: familyId
                "\"FAMILY_NAME\" TEXT," + // 22: familyName
                "\"FAMILY_CODE\" TEXT," + // 23: familyCode
                "\"MODEL_NAME\" TEXT," + // 24: modelName
                "\"MODEL_CODE\" TEXT," + // 25: modelCode
                "\"CAR_TELE_PHONE\" TEXT," + // 26: carTelePhone
                "\"CAR_EMAIL\" TEXT," + // 27: carEmail
                "\"VEHICLE_PRICE\" REAL," + // 28: vehiclePrice
                "\"ENROL_DATE\" TEXT," + // 29: enrolDate
                "\"BUY_CAR_DATE\" TEXT," + // 30: buyCarDate
                "\"USE_PROPERTY_CODE\" TEXT," + // 31: usePropertyCode
                "\"USE_PROPERTY_NAME\" TEXT," + // 32: usePropertyName
                "\"BATTERY_NUMBER\" TEXT," + // 33: batteryNumber
                "\"IS_INSURE_COMMERCIAL\" TEXT," + // 34: isInsureCommercial
                "\"COMMERCIAL_COMPANY\" TEXT," + // 35: commercialCompany
                "\"COMMERCIAL_COMPANY_CODE\" TEXT," + // 36: commercialCompanyCode
                "\"POLICY_NO\" TEXT," + // 37: policyNo
                "\"ENGINE_NO\" TEXT," + // 38: engineNo
                "\"VIN_NO\" TEXT," + // 39: vinNo
                "\"RELATION\" TEXT," + // 40: relation
                "\"RELATION_CODE\" TEXT," + // 41: relationCode
                "\"SERVICE_NAME\" TEXT," + // 42: serviceName
                "\"SERVICE_SEX\" TEXT," + // 43: serviceSex
                "\"SERVICE_CERTIFICATE_TYPE\" TEXT," + // 44: serviceCertificateType
                "\"SERVICE_CERTIFICATE_TYPE_CODE\" TEXT," + // 45: serviceCertificateTypeCode
                "\"SERVICE_CERTIFICATE_NO\" TEXT," + // 46: serviceCertificateNo
                "\"SERVICE_TELE_PHONE\" TEXT," + // 47: serviceTelePhone
                "\"SERVICE_EMAIL\" TEXT," + // 48: serviceEmail
                "\"SERIAL_NO\" INTEGER," + // 49: serialNo
                "\"ADDITIONAL_FLAG\" TEXT," + // 50: additionalFlag
                "\"EXEMPT_FLAG\" TEXT," + // 51: exemptFlag
                "\"PRODUCT_CODE\" TEXT," + // 52: productCode
                "\"PRODUCT_NAME\" TEXT," + // 53: productName
                "\"TERM_OF_VALIDITY_DATE\" TEXT," + // 54: termOfValidityDate
                "\"SERVICE_START_DATE\" TEXT," + // 55: serviceStartDate
                "\"SERVICE_END_DATE\" TEXT," + // 56: serviceEndDate
                "\"MILEAGE\" TEXT," + // 57: mileage
                "\"AMOUNT_DAMAGES\" REAL," + // 58: amountDamages
                "\"CAR_TYPE\" TEXT," + // 59: carType
                "\"CAR_TYPE_CODE\" TEXT," + // 60: carTypeCode
                "\"VEHICLE_MODEL\" TEXT," + // 61: vehicleModel
                "\"VEHICLE_MODEL_CODE\" TEXT," + // 62: vehicleModelCode
                "\"PLATE_TYPE\" TEXT," + // 63: plateType
                "\"PLATE_TYPE_CODE\" TEXT," + // 64: plateTypeCode
                "\"IS_MAIN_CAR_DAMAGED\" TEXT," + // 65: isMainCarDamaged
                "\"DUTY_RATIO\" TEXT," + // 66: dutyRatio
                "\"INSURANCE_POLICY_NO\" TEXT," + // 67: insurancePolicyNo
                "\"INSURANCE_COMPANY\" TEXT," + // 68: insuranceCompany
                "\"COMMERCIAL_POLICY_NO\" TEXT," + // 69: commercialPolicyNo
                "\"AGE\" INTEGER NOT NULL ," + // 70: age
                "\"LICENSE_NUMBER\" TEXT," + // 71: licenseNumber
                "\"DRIVE_TYPE\" TEXT," + // 72: driveType
                "\"DRIVE_TYPE_CODE\" TEXT," + // 73: driveTypeCode
                "\"DRIVER_TERRITORIAL\" TEXT," + // 74: driverTerritorial
                "\"CERTIFICATION_AUTHORITY\" TEXT," + // 75: certificationAuthority
                "\"DEGREE_OF_EDUCATION\" TEXT," + // 76: degreeOfEducation
                "\"PROFESSION\" TEXT," + // 77: profession
                "\"ISSUE_DATE\" TEXT," + // 78: issueDate
                "\"UNIT_OR_ADDRESS\" TEXT," + // 79: unitOrAddress
                "\"VEHICLE_TYPE\" TEXT," + // 80: vehicleType
                "\"VEHICLE_TYPE_CODE\" TEXT," + // 81: vehicleTypeCode
                "\"USE_PROPERTY\" TEXT," + // 82: useProperty
                "\"REAL_PRICE\" REAL," + // 83: realPrice
                "\"IS_IMPORT\" TEXT," + // 84: isImport
                "\"MAKE_DATE\" TEXT," + // 85: makeDate
                "\"SEAT\" INTEGER NOT NULL ," + // 86: seat
                "\"POWNER\" TEXT," + // 87: powner
                "\"DISPLACEMENT\" TEXT," + // 88: displacement
                "\"TONNAGE\" REAL," + // 89: tonnage
                "\"CAR_COLOR\" TEXT," + // 90: carColor
                "\"PLATE_COLOR\" TEXT," + // 91: plateColor
                "\"PLATE_COLOR_CODE\" TEXT," + // 92: plateColorCode
                "\"GUARD_ALARM\" TEXT," + // 93: guardAlarm
                "\"DRIVER_AREA\" TEXT," + // 94: driverArea
                "\"DISCOUNT_TYPE\" TEXT," + // 95: discountType
                "\"MOTOR_NUM\" TEXT," + // 96: motorNum
                "\"YANBAO_START_MILES\" TEXT," + // 97: yanbaoStartMiles
                "\"ADDRESS\" TEXT," + // 98: address
                "\"PRODUCT_TYPE\" TEXT," + // 99: productType
                "\"PRODUCT_TYPE_CODE\" TEXT);"); // 100: productTypeCode
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CONTRACT\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Contract entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String evalId = entity.getEvalId();
        if (evalId != null) {
            stmt.bindString(3, evalId);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(4, reportCode);
        }
 
        String ownerName = entity.getOwnerName();
        if (ownerName != null) {
            stmt.bindString(5, ownerName);
        }
 
        String ownerSex = entity.getOwnerSex();
        if (ownerSex != null) {
            stmt.bindString(6, ownerSex);
        }
 
        String ownerCertificateType = entity.getOwnerCertificateType();
        if (ownerCertificateType != null) {
            stmt.bindString(7, ownerCertificateType);
        }
 
        String ownerCertificateTypeCode = entity.getOwnerCertificateTypeCode();
        if (ownerCertificateTypeCode != null) {
            stmt.bindString(8, ownerCertificateTypeCode);
        }
 
        String ownerCertificateNo = entity.getOwnerCertificateNo();
        if (ownerCertificateNo != null) {
            stmt.bindString(9, ownerCertificateNo);
        }
 
        String ownerTelePhone = entity.getOwnerTelePhone();
        if (ownerTelePhone != null) {
            stmt.bindString(10, ownerTelePhone);
        }
 
        String ownerEmail = entity.getOwnerEmail();
        if (ownerEmail != null) {
            stmt.bindString(11, ownerEmail);
        }
 
        String proComCode = entity.getProComCode();
        if (proComCode != null) {
            stmt.bindString(12, proComCode);
        }
 
        String proComName = entity.getProComName();
        if (proComName != null) {
            stmt.bindString(13, proComName);
        }
 
        String cityComCode = entity.getCityComCode();
        if (cityComCode != null) {
            stmt.bindString(14, cityComCode);
        }
 
        String cityComName = entity.getCityComName();
        if (cityComName != null) {
            stmt.bindString(15, cityComName);
        }
 
        String countyComCode = entity.getCountyComCode();
        if (countyComCode != null) {
            stmt.bindString(16, countyComCode);
        }
 
        String countyComName = entity.getCountyComName();
        if (countyComName != null) {
            stmt.bindString(17, countyComName);
        }
 
        String region = entity.getRegion();
        if (region != null) {
            stmt.bindString(18, region);
        }
 
        String plateNo = entity.getPlateNo();
        if (plateNo != null) {
            stmt.bindString(19, plateNo);
        }
 
        String brandName = entity.getBrandName();
        if (brandName != null) {
            stmt.bindString(20, brandName);
        }
 
        String brandCode = entity.getBrandCode();
        if (brandCode != null) {
            stmt.bindString(21, brandCode);
        }
 
        String familyId = entity.getFamilyId();
        if (familyId != null) {
            stmt.bindString(22, familyId);
        }
 
        String familyName = entity.getFamilyName();
        if (familyName != null) {
            stmt.bindString(23, familyName);
        }
 
        String familyCode = entity.getFamilyCode();
        if (familyCode != null) {
            stmt.bindString(24, familyCode);
        }
 
        String modelName = entity.getModelName();
        if (modelName != null) {
            stmt.bindString(25, modelName);
        }
 
        String modelCode = entity.getModelCode();
        if (modelCode != null) {
            stmt.bindString(26, modelCode);
        }
 
        String carTelePhone = entity.getCarTelePhone();
        if (carTelePhone != null) {
            stmt.bindString(27, carTelePhone);
        }
 
        String carEmail = entity.getCarEmail();
        if (carEmail != null) {
            stmt.bindString(28, carEmail);
        }
 
        Double vehiclePrice = entity.getVehiclePrice();
        if (vehiclePrice != null) {
            stmt.bindDouble(29, vehiclePrice);
        }
 
        String enrolDate = entity.getEnrolDate();
        if (enrolDate != null) {
            stmt.bindString(30, enrolDate);
        }
 
        String buyCarDate = entity.getBuyCarDate();
        if (buyCarDate != null) {
            stmt.bindString(31, buyCarDate);
        }
 
        String usePropertyCode = entity.getUsePropertyCode();
        if (usePropertyCode != null) {
            stmt.bindString(32, usePropertyCode);
        }
 
        String usePropertyName = entity.getUsePropertyName();
        if (usePropertyName != null) {
            stmt.bindString(33, usePropertyName);
        }
 
        String batteryNumber = entity.getBatteryNumber();
        if (batteryNumber != null) {
            stmt.bindString(34, batteryNumber);
        }
 
        String isInsureCommercial = entity.getIsInsureCommercial();
        if (isInsureCommercial != null) {
            stmt.bindString(35, isInsureCommercial);
        }
 
        String commercialCompany = entity.getCommercialCompany();
        if (commercialCompany != null) {
            stmt.bindString(36, commercialCompany);
        }
 
        String commercialCompanyCode = entity.getCommercialCompanyCode();
        if (commercialCompanyCode != null) {
            stmt.bindString(37, commercialCompanyCode);
        }
 
        String policyNo = entity.getPolicyNo();
        if (policyNo != null) {
            stmt.bindString(38, policyNo);
        }
 
        String engineNo = entity.getEngineNo();
        if (engineNo != null) {
            stmt.bindString(39, engineNo);
        }
 
        String vinNo = entity.getVinNo();
        if (vinNo != null) {
            stmt.bindString(40, vinNo);
        }
 
        String relation = entity.getRelation();
        if (relation != null) {
            stmt.bindString(41, relation);
        }
 
        String relationCode = entity.getRelationCode();
        if (relationCode != null) {
            stmt.bindString(42, relationCode);
        }
 
        String serviceName = entity.getServiceName();
        if (serviceName != null) {
            stmt.bindString(43, serviceName);
        }
 
        String serviceSex = entity.getServiceSex();
        if (serviceSex != null) {
            stmt.bindString(44, serviceSex);
        }
 
        String serviceCertificateType = entity.getServiceCertificateType();
        if (serviceCertificateType != null) {
            stmt.bindString(45, serviceCertificateType);
        }
 
        String serviceCertificateTypeCode = entity.getServiceCertificateTypeCode();
        if (serviceCertificateTypeCode != null) {
            stmt.bindString(46, serviceCertificateTypeCode);
        }
 
        String serviceCertificateNo = entity.getServiceCertificateNo();
        if (serviceCertificateNo != null) {
            stmt.bindString(47, serviceCertificateNo);
        }
 
        String serviceTelePhone = entity.getServiceTelePhone();
        if (serviceTelePhone != null) {
            stmt.bindString(48, serviceTelePhone);
        }
 
        String serviceEmail = entity.getServiceEmail();
        if (serviceEmail != null) {
            stmt.bindString(49, serviceEmail);
        }
 
        Integer serialNo = entity.getSerialNo();
        if (serialNo != null) {
            stmt.bindLong(50, serialNo);
        }
 
        String additionalFlag = entity.getAdditionalFlag();
        if (additionalFlag != null) {
            stmt.bindString(51, additionalFlag);
        }
 
        String exemptFlag = entity.getExemptFlag();
        if (exemptFlag != null) {
            stmt.bindString(52, exemptFlag);
        }
 
        String productCode = entity.getProductCode();
        if (productCode != null) {
            stmt.bindString(53, productCode);
        }
 
        String productName = entity.getProductName();
        if (productName != null) {
            stmt.bindString(54, productName);
        }
 
        String termOfValidityDate = entity.getTermOfValidityDate();
        if (termOfValidityDate != null) {
            stmt.bindString(55, termOfValidityDate);
        }
 
        String serviceStartDate = entity.getServiceStartDate();
        if (serviceStartDate != null) {
            stmt.bindString(56, serviceStartDate);
        }
 
        String serviceEndDate = entity.getServiceEndDate();
        if (serviceEndDate != null) {
            stmt.bindString(57, serviceEndDate);
        }
 
        String mileage = entity.getMileage();
        if (mileage != null) {
            stmt.bindString(58, mileage);
        }
 
        Double amountDamages = entity.getAmountDamages();
        if (amountDamages != null) {
            stmt.bindDouble(59, amountDamages);
        }
 
        String carType = entity.getCarType();
        if (carType != null) {
            stmt.bindString(60, carType);
        }
 
        String carTypeCode = entity.getCarTypeCode();
        if (carTypeCode != null) {
            stmt.bindString(61, carTypeCode);
        }
 
        String vehicleModel = entity.getVehicleModel();
        if (vehicleModel != null) {
            stmt.bindString(62, vehicleModel);
        }
 
        String vehicleModelCode = entity.getVehicleModelCode();
        if (vehicleModelCode != null) {
            stmt.bindString(63, vehicleModelCode);
        }
 
        String plateType = entity.getPlateType();
        if (plateType != null) {
            stmt.bindString(64, plateType);
        }
 
        String plateTypeCode = entity.getPlateTypeCode();
        if (plateTypeCode != null) {
            stmt.bindString(65, plateTypeCode);
        }
 
        String isMainCarDamaged = entity.getIsMainCarDamaged();
        if (isMainCarDamaged != null) {
            stmt.bindString(66, isMainCarDamaged);
        }
 
        String dutyRatio = entity.getDutyRatio();
        if (dutyRatio != null) {
            stmt.bindString(67, dutyRatio);
        }
 
        String insurancePolicyNo = entity.getInsurancePolicyNo();
        if (insurancePolicyNo != null) {
            stmt.bindString(68, insurancePolicyNo);
        }
 
        String insuranceCompany = entity.getInsuranceCompany();
        if (insuranceCompany != null) {
            stmt.bindString(69, insuranceCompany);
        }
 
        String commercialPolicyNo = entity.getCommercialPolicyNo();
        if (commercialPolicyNo != null) {
            stmt.bindString(70, commercialPolicyNo);
        }
        stmt.bindLong(71, entity.getAge());
 
        String licenseNumber = entity.getLicenseNumber();
        if (licenseNumber != null) {
            stmt.bindString(72, licenseNumber);
        }
 
        String driveType = entity.getDriveType();
        if (driveType != null) {
            stmt.bindString(73, driveType);
        }
 
        String driveTypeCode = entity.getDriveTypeCode();
        if (driveTypeCode != null) {
            stmt.bindString(74, driveTypeCode);
        }
 
        String driverTerritorial = entity.getDriverTerritorial();
        if (driverTerritorial != null) {
            stmt.bindString(75, driverTerritorial);
        }
 
        String certificationAuthority = entity.getCertificationAuthority();
        if (certificationAuthority != null) {
            stmt.bindString(76, certificationAuthority);
        }
 
        String degreeOfEducation = entity.getDegreeOfEducation();
        if (degreeOfEducation != null) {
            stmt.bindString(77, degreeOfEducation);
        }
 
        String profession = entity.getProfession();
        if (profession != null) {
            stmt.bindString(78, profession);
        }
 
        String issueDate = entity.getIssueDate();
        if (issueDate != null) {
            stmt.bindString(79, issueDate);
        }
 
        String unitOrAddress = entity.getUnitOrAddress();
        if (unitOrAddress != null) {
            stmt.bindString(80, unitOrAddress);
        }
 
        String vehicleType = entity.getVehicleType();
        if (vehicleType != null) {
            stmt.bindString(81, vehicleType);
        }
 
        String vehicleTypeCode = entity.getVehicleTypeCode();
        if (vehicleTypeCode != null) {
            stmt.bindString(82, vehicleTypeCode);
        }
 
        String useProperty = entity.getUseProperty();
        if (useProperty != null) {
            stmt.bindString(83, useProperty);
        }
 
        Double realPrice = entity.getRealPrice();
        if (realPrice != null) {
            stmt.bindDouble(84, realPrice);
        }
 
        String isImport = entity.getIsImport();
        if (isImport != null) {
            stmt.bindString(85, isImport);
        }
 
        String makeDate = entity.getMakeDate();
        if (makeDate != null) {
            stmt.bindString(86, makeDate);
        }
        stmt.bindLong(87, entity.getSeat());
 
        String powner = entity.getPowner();
        if (powner != null) {
            stmt.bindString(88, powner);
        }
 
        String displacement = entity.getDisplacement();
        if (displacement != null) {
            stmt.bindString(89, displacement);
        }
 
        Double tonnage = entity.getTonnage();
        if (tonnage != null) {
            stmt.bindDouble(90, tonnage);
        }
 
        String carColor = entity.getCarColor();
        if (carColor != null) {
            stmt.bindString(91, carColor);
        }
 
        String plateColor = entity.getPlateColor();
        if (plateColor != null) {
            stmt.bindString(92, plateColor);
        }
 
        String plateColorCode = entity.getPlateColorCode();
        if (plateColorCode != null) {
            stmt.bindString(93, plateColorCode);
        }
 
        String guardAlarm = entity.getGuardAlarm();
        if (guardAlarm != null) {
            stmt.bindString(94, guardAlarm);
        }
 
        String driverArea = entity.getDriverArea();
        if (driverArea != null) {
            stmt.bindString(95, driverArea);
        }
 
        String discountType = entity.getDiscountType();
        if (discountType != null) {
            stmt.bindString(96, discountType);
        }
 
        String motorNum = entity.getMotorNum();
        if (motorNum != null) {
            stmt.bindString(97, motorNum);
        }
 
        String yanbaoStartMiles = entity.getYanbaoStartMiles();
        if (yanbaoStartMiles != null) {
            stmt.bindString(98, yanbaoStartMiles);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(99, address);
        }
 
        String productType = entity.getProductType();
        if (productType != null) {
            stmt.bindString(100, productType);
        }
 
        String productTypeCode = entity.getProductTypeCode();
        if (productTypeCode != null) {
            stmt.bindString(101, productTypeCode);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Contract entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String evalId = entity.getEvalId();
        if (evalId != null) {
            stmt.bindString(3, evalId);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(4, reportCode);
        }
 
        String ownerName = entity.getOwnerName();
        if (ownerName != null) {
            stmt.bindString(5, ownerName);
        }
 
        String ownerSex = entity.getOwnerSex();
        if (ownerSex != null) {
            stmt.bindString(6, ownerSex);
        }
 
        String ownerCertificateType = entity.getOwnerCertificateType();
        if (ownerCertificateType != null) {
            stmt.bindString(7, ownerCertificateType);
        }
 
        String ownerCertificateTypeCode = entity.getOwnerCertificateTypeCode();
        if (ownerCertificateTypeCode != null) {
            stmt.bindString(8, ownerCertificateTypeCode);
        }
 
        String ownerCertificateNo = entity.getOwnerCertificateNo();
        if (ownerCertificateNo != null) {
            stmt.bindString(9, ownerCertificateNo);
        }
 
        String ownerTelePhone = entity.getOwnerTelePhone();
        if (ownerTelePhone != null) {
            stmt.bindString(10, ownerTelePhone);
        }
 
        String ownerEmail = entity.getOwnerEmail();
        if (ownerEmail != null) {
            stmt.bindString(11, ownerEmail);
        }
 
        String proComCode = entity.getProComCode();
        if (proComCode != null) {
            stmt.bindString(12, proComCode);
        }
 
        String proComName = entity.getProComName();
        if (proComName != null) {
            stmt.bindString(13, proComName);
        }
 
        String cityComCode = entity.getCityComCode();
        if (cityComCode != null) {
            stmt.bindString(14, cityComCode);
        }
 
        String cityComName = entity.getCityComName();
        if (cityComName != null) {
            stmt.bindString(15, cityComName);
        }
 
        String countyComCode = entity.getCountyComCode();
        if (countyComCode != null) {
            stmt.bindString(16, countyComCode);
        }
 
        String countyComName = entity.getCountyComName();
        if (countyComName != null) {
            stmt.bindString(17, countyComName);
        }
 
        String region = entity.getRegion();
        if (region != null) {
            stmt.bindString(18, region);
        }
 
        String plateNo = entity.getPlateNo();
        if (plateNo != null) {
            stmt.bindString(19, plateNo);
        }
 
        String brandName = entity.getBrandName();
        if (brandName != null) {
            stmt.bindString(20, brandName);
        }
 
        String brandCode = entity.getBrandCode();
        if (brandCode != null) {
            stmt.bindString(21, brandCode);
        }
 
        String familyId = entity.getFamilyId();
        if (familyId != null) {
            stmt.bindString(22, familyId);
        }
 
        String familyName = entity.getFamilyName();
        if (familyName != null) {
            stmt.bindString(23, familyName);
        }
 
        String familyCode = entity.getFamilyCode();
        if (familyCode != null) {
            stmt.bindString(24, familyCode);
        }
 
        String modelName = entity.getModelName();
        if (modelName != null) {
            stmt.bindString(25, modelName);
        }
 
        String modelCode = entity.getModelCode();
        if (modelCode != null) {
            stmt.bindString(26, modelCode);
        }
 
        String carTelePhone = entity.getCarTelePhone();
        if (carTelePhone != null) {
            stmt.bindString(27, carTelePhone);
        }
 
        String carEmail = entity.getCarEmail();
        if (carEmail != null) {
            stmt.bindString(28, carEmail);
        }
 
        Double vehiclePrice = entity.getVehiclePrice();
        if (vehiclePrice != null) {
            stmt.bindDouble(29, vehiclePrice);
        }
 
        String enrolDate = entity.getEnrolDate();
        if (enrolDate != null) {
            stmt.bindString(30, enrolDate);
        }
 
        String buyCarDate = entity.getBuyCarDate();
        if (buyCarDate != null) {
            stmt.bindString(31, buyCarDate);
        }
 
        String usePropertyCode = entity.getUsePropertyCode();
        if (usePropertyCode != null) {
            stmt.bindString(32, usePropertyCode);
        }
 
        String usePropertyName = entity.getUsePropertyName();
        if (usePropertyName != null) {
            stmt.bindString(33, usePropertyName);
        }
 
        String batteryNumber = entity.getBatteryNumber();
        if (batteryNumber != null) {
            stmt.bindString(34, batteryNumber);
        }
 
        String isInsureCommercial = entity.getIsInsureCommercial();
        if (isInsureCommercial != null) {
            stmt.bindString(35, isInsureCommercial);
        }
 
        String commercialCompany = entity.getCommercialCompany();
        if (commercialCompany != null) {
            stmt.bindString(36, commercialCompany);
        }
 
        String commercialCompanyCode = entity.getCommercialCompanyCode();
        if (commercialCompanyCode != null) {
            stmt.bindString(37, commercialCompanyCode);
        }
 
        String policyNo = entity.getPolicyNo();
        if (policyNo != null) {
            stmt.bindString(38, policyNo);
        }
 
        String engineNo = entity.getEngineNo();
        if (engineNo != null) {
            stmt.bindString(39, engineNo);
        }
 
        String vinNo = entity.getVinNo();
        if (vinNo != null) {
            stmt.bindString(40, vinNo);
        }
 
        String relation = entity.getRelation();
        if (relation != null) {
            stmt.bindString(41, relation);
        }
 
        String relationCode = entity.getRelationCode();
        if (relationCode != null) {
            stmt.bindString(42, relationCode);
        }
 
        String serviceName = entity.getServiceName();
        if (serviceName != null) {
            stmt.bindString(43, serviceName);
        }
 
        String serviceSex = entity.getServiceSex();
        if (serviceSex != null) {
            stmt.bindString(44, serviceSex);
        }
 
        String serviceCertificateType = entity.getServiceCertificateType();
        if (serviceCertificateType != null) {
            stmt.bindString(45, serviceCertificateType);
        }
 
        String serviceCertificateTypeCode = entity.getServiceCertificateTypeCode();
        if (serviceCertificateTypeCode != null) {
            stmt.bindString(46, serviceCertificateTypeCode);
        }
 
        String serviceCertificateNo = entity.getServiceCertificateNo();
        if (serviceCertificateNo != null) {
            stmt.bindString(47, serviceCertificateNo);
        }
 
        String serviceTelePhone = entity.getServiceTelePhone();
        if (serviceTelePhone != null) {
            stmt.bindString(48, serviceTelePhone);
        }
 
        String serviceEmail = entity.getServiceEmail();
        if (serviceEmail != null) {
            stmt.bindString(49, serviceEmail);
        }
 
        Integer serialNo = entity.getSerialNo();
        if (serialNo != null) {
            stmt.bindLong(50, serialNo);
        }
 
        String additionalFlag = entity.getAdditionalFlag();
        if (additionalFlag != null) {
            stmt.bindString(51, additionalFlag);
        }
 
        String exemptFlag = entity.getExemptFlag();
        if (exemptFlag != null) {
            stmt.bindString(52, exemptFlag);
        }
 
        String productCode = entity.getProductCode();
        if (productCode != null) {
            stmt.bindString(53, productCode);
        }
 
        String productName = entity.getProductName();
        if (productName != null) {
            stmt.bindString(54, productName);
        }
 
        String termOfValidityDate = entity.getTermOfValidityDate();
        if (termOfValidityDate != null) {
            stmt.bindString(55, termOfValidityDate);
        }
 
        String serviceStartDate = entity.getServiceStartDate();
        if (serviceStartDate != null) {
            stmt.bindString(56, serviceStartDate);
        }
 
        String serviceEndDate = entity.getServiceEndDate();
        if (serviceEndDate != null) {
            stmt.bindString(57, serviceEndDate);
        }
 
        String mileage = entity.getMileage();
        if (mileage != null) {
            stmt.bindString(58, mileage);
        }
 
        Double amountDamages = entity.getAmountDamages();
        if (amountDamages != null) {
            stmt.bindDouble(59, amountDamages);
        }
 
        String carType = entity.getCarType();
        if (carType != null) {
            stmt.bindString(60, carType);
        }
 
        String carTypeCode = entity.getCarTypeCode();
        if (carTypeCode != null) {
            stmt.bindString(61, carTypeCode);
        }
 
        String vehicleModel = entity.getVehicleModel();
        if (vehicleModel != null) {
            stmt.bindString(62, vehicleModel);
        }
 
        String vehicleModelCode = entity.getVehicleModelCode();
        if (vehicleModelCode != null) {
            stmt.bindString(63, vehicleModelCode);
        }
 
        String plateType = entity.getPlateType();
        if (plateType != null) {
            stmt.bindString(64, plateType);
        }
 
        String plateTypeCode = entity.getPlateTypeCode();
        if (plateTypeCode != null) {
            stmt.bindString(65, plateTypeCode);
        }
 
        String isMainCarDamaged = entity.getIsMainCarDamaged();
        if (isMainCarDamaged != null) {
            stmt.bindString(66, isMainCarDamaged);
        }
 
        String dutyRatio = entity.getDutyRatio();
        if (dutyRatio != null) {
            stmt.bindString(67, dutyRatio);
        }
 
        String insurancePolicyNo = entity.getInsurancePolicyNo();
        if (insurancePolicyNo != null) {
            stmt.bindString(68, insurancePolicyNo);
        }
 
        String insuranceCompany = entity.getInsuranceCompany();
        if (insuranceCompany != null) {
            stmt.bindString(69, insuranceCompany);
        }
 
        String commercialPolicyNo = entity.getCommercialPolicyNo();
        if (commercialPolicyNo != null) {
            stmt.bindString(70, commercialPolicyNo);
        }
        stmt.bindLong(71, entity.getAge());
 
        String licenseNumber = entity.getLicenseNumber();
        if (licenseNumber != null) {
            stmt.bindString(72, licenseNumber);
        }
 
        String driveType = entity.getDriveType();
        if (driveType != null) {
            stmt.bindString(73, driveType);
        }
 
        String driveTypeCode = entity.getDriveTypeCode();
        if (driveTypeCode != null) {
            stmt.bindString(74, driveTypeCode);
        }
 
        String driverTerritorial = entity.getDriverTerritorial();
        if (driverTerritorial != null) {
            stmt.bindString(75, driverTerritorial);
        }
 
        String certificationAuthority = entity.getCertificationAuthority();
        if (certificationAuthority != null) {
            stmt.bindString(76, certificationAuthority);
        }
 
        String degreeOfEducation = entity.getDegreeOfEducation();
        if (degreeOfEducation != null) {
            stmt.bindString(77, degreeOfEducation);
        }
 
        String profession = entity.getProfession();
        if (profession != null) {
            stmt.bindString(78, profession);
        }
 
        String issueDate = entity.getIssueDate();
        if (issueDate != null) {
            stmt.bindString(79, issueDate);
        }
 
        String unitOrAddress = entity.getUnitOrAddress();
        if (unitOrAddress != null) {
            stmt.bindString(80, unitOrAddress);
        }
 
        String vehicleType = entity.getVehicleType();
        if (vehicleType != null) {
            stmt.bindString(81, vehicleType);
        }
 
        String vehicleTypeCode = entity.getVehicleTypeCode();
        if (vehicleTypeCode != null) {
            stmt.bindString(82, vehicleTypeCode);
        }
 
        String useProperty = entity.getUseProperty();
        if (useProperty != null) {
            stmt.bindString(83, useProperty);
        }
 
        Double realPrice = entity.getRealPrice();
        if (realPrice != null) {
            stmt.bindDouble(84, realPrice);
        }
 
        String isImport = entity.getIsImport();
        if (isImport != null) {
            stmt.bindString(85, isImport);
        }
 
        String makeDate = entity.getMakeDate();
        if (makeDate != null) {
            stmt.bindString(86, makeDate);
        }
        stmt.bindLong(87, entity.getSeat());
 
        String powner = entity.getPowner();
        if (powner != null) {
            stmt.bindString(88, powner);
        }
 
        String displacement = entity.getDisplacement();
        if (displacement != null) {
            stmt.bindString(89, displacement);
        }
 
        Double tonnage = entity.getTonnage();
        if (tonnage != null) {
            stmt.bindDouble(90, tonnage);
        }
 
        String carColor = entity.getCarColor();
        if (carColor != null) {
            stmt.bindString(91, carColor);
        }
 
        String plateColor = entity.getPlateColor();
        if (plateColor != null) {
            stmt.bindString(92, plateColor);
        }
 
        String plateColorCode = entity.getPlateColorCode();
        if (plateColorCode != null) {
            stmt.bindString(93, plateColorCode);
        }
 
        String guardAlarm = entity.getGuardAlarm();
        if (guardAlarm != null) {
            stmt.bindString(94, guardAlarm);
        }
 
        String driverArea = entity.getDriverArea();
        if (driverArea != null) {
            stmt.bindString(95, driverArea);
        }
 
        String discountType = entity.getDiscountType();
        if (discountType != null) {
            stmt.bindString(96, discountType);
        }
 
        String motorNum = entity.getMotorNum();
        if (motorNum != null) {
            stmt.bindString(97, motorNum);
        }
 
        String yanbaoStartMiles = entity.getYanbaoStartMiles();
        if (yanbaoStartMiles != null) {
            stmt.bindString(98, yanbaoStartMiles);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(99, address);
        }
 
        String productType = entity.getProductType();
        if (productType != null) {
            stmt.bindString(100, productType);
        }
 
        String productTypeCode = entity.getProductTypeCode();
        if (productTypeCode != null) {
            stmt.bindString(101, productTypeCode);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public Contract readEntity(Cursor cursor, int offset) {
        Contract entity = new Contract( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // userId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // evalId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // reportCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ownerName
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // ownerSex
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // ownerCertificateType
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // ownerCertificateTypeCode
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // ownerCertificateNo
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // ownerTelePhone
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // ownerEmail
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // proComCode
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // proComName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // cityComCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // cityComName
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // countyComCode
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // countyComName
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // region
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // plateNo
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // brandName
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // brandCode
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // familyId
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // familyName
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // familyCode
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // modelName
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // modelCode
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // carTelePhone
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // carEmail
            cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28), // vehiclePrice
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // enrolDate
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // buyCarDate
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // usePropertyCode
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // usePropertyName
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // batteryNumber
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // isInsureCommercial
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // commercialCompany
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // commercialCompanyCode
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // policyNo
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // engineNo
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // vinNo
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // relation
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // relationCode
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // serviceName
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // serviceSex
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // serviceCertificateType
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // serviceCertificateTypeCode
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // serviceCertificateNo
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // serviceTelePhone
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // serviceEmail
            cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49), // serialNo
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // additionalFlag
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // exemptFlag
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // productCode
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // productName
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // termOfValidityDate
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // serviceStartDate
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // serviceEndDate
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // mileage
            cursor.isNull(offset + 58) ? null : cursor.getDouble(offset + 58), // amountDamages
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // carType
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // carTypeCode
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // vehicleModel
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // vehicleModelCode
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // plateType
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // plateTypeCode
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // isMainCarDamaged
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // dutyRatio
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // insurancePolicyNo
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // insuranceCompany
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // commercialPolicyNo
            cursor.getInt(offset + 70), // age
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // licenseNumber
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // driveType
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // driveTypeCode
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // driverTerritorial
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // certificationAuthority
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // degreeOfEducation
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // profession
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // issueDate
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // unitOrAddress
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // vehicleType
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // vehicleTypeCode
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // useProperty
            cursor.isNull(offset + 83) ? null : cursor.getDouble(offset + 83), // realPrice
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // isImport
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // makeDate
            cursor.getInt(offset + 86), // seat
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // powner
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88), // displacement
            cursor.isNull(offset + 89) ? null : cursor.getDouble(offset + 89), // tonnage
            cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90), // carColor
            cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91), // plateColor
            cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92), // plateColorCode
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // guardAlarm
            cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94), // driverArea
            cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95), // discountType
            cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96), // motorNum
            cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97), // yanbaoStartMiles
            cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98), // address
            cursor.isNull(offset + 99) ? null : cursor.getString(offset + 99), // productType
            cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100) // productTypeCode
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Contract entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setUserId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setEvalId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setReportCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setOwnerName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setOwnerSex(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setOwnerCertificateType(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setOwnerCertificateTypeCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setOwnerCertificateNo(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setOwnerTelePhone(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setOwnerEmail(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setProComCode(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setProComName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setCityComCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setCityComName(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCountyComCode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCountyComName(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setRegion(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setPlateNo(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setBrandName(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setBrandCode(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setFamilyId(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setFamilyName(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFamilyCode(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setModelName(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setModelCode(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setCarTelePhone(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setCarEmail(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setVehiclePrice(cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28));
        entity.setEnrolDate(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setBuyCarDate(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setUsePropertyCode(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setUsePropertyName(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setBatteryNumber(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setIsInsureCommercial(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCommercialCompany(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setCommercialCompanyCode(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setPolicyNo(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setEngineNo(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setVinNo(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setRelation(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setRelationCode(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setServiceName(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setServiceSex(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setServiceCertificateType(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setServiceCertificateTypeCode(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setServiceCertificateNo(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setServiceTelePhone(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setServiceEmail(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setSerialNo(cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49));
        entity.setAdditionalFlag(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setExemptFlag(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setProductCode(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setProductName(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setTermOfValidityDate(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setServiceStartDate(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setServiceEndDate(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setMileage(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setAmountDamages(cursor.isNull(offset + 58) ? null : cursor.getDouble(offset + 58));
        entity.setCarType(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setCarTypeCode(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setVehicleModel(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setVehicleModelCode(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setPlateType(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setPlateTypeCode(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setIsMainCarDamaged(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setDutyRatio(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setInsurancePolicyNo(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setInsuranceCompany(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setCommercialPolicyNo(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setAge(cursor.getInt(offset + 70));
        entity.setLicenseNumber(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setDriveType(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setDriveTypeCode(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setDriverTerritorial(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setCertificationAuthority(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setDegreeOfEducation(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setProfession(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setIssueDate(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setUnitOrAddress(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setVehicleType(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setVehicleTypeCode(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setUseProperty(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setRealPrice(cursor.isNull(offset + 83) ? null : cursor.getDouble(offset + 83));
        entity.setIsImport(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setMakeDate(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setSeat(cursor.getInt(offset + 86));
        entity.setPowner(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setDisplacement(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
        entity.setTonnage(cursor.isNull(offset + 89) ? null : cursor.getDouble(offset + 89));
        entity.setCarColor(cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90));
        entity.setPlateColor(cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91));
        entity.setPlateColorCode(cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92));
        entity.setGuardAlarm(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setDriverArea(cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94));
        entity.setDiscountType(cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95));
        entity.setMotorNum(cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96));
        entity.setYanbaoStartMiles(cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97));
        entity.setAddress(cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98));
        entity.setProductType(cursor.isNull(offset + 99) ? null : cursor.getString(offset + 99));
        entity.setProductTypeCode(cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100));
     }
    
    @Override
    protected final String updateKeyAfterInsert(Contract entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public String getKey(Contract entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Contract entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
