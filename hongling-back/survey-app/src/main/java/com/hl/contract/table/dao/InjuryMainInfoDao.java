package com.hl.contract.table.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.hl.contract.table.model.InjuryMainInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "INJURY_MAIN_INFO".
*/
public class InjuryMainInfoDao extends AbstractDao<InjuryMainInfo, String> {

    public static final String TABLENAME = "INJURY_MAIN_INFO";

    /**
     * Properties of entity InjuryMainInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property ReportCode = new Property(1, String.class, "reportCode", false, "REPORT_CODE");
        public final static Property TaskNo = new Property(2, String.class, "taskNo", false, "TASK_NO");
        public final static Property EvalId = new Property(3, String.class, "evalId", false, "EVAL_ID");
        public final static Property TaskType = new Property(4, String.class, "taskType", false, "TASK_TYPE");
        public final static Property TaskTypeCode = new Property(5, String.class, "taskTypeCode", false, "TASK_TYPE_CODE");
        public final static Property LossType = new Property(6, String.class, "lossType", false, "LOSS_TYPE");
        public final static Property LossTypeCode = new Property(7, String.class, "lossTypeCode", false, "LOSS_TYPE_CODE");
        public final static Property OperateTime = new Property(8, String.class, "operateTime", false, "OPERATE_TIME");
        public final static Property Completedflag = new Property(9, String.class, "completedflag", false, "COMPLETEDFLAG");
        public final static Property RebackFlag = new Property(10, String.class, "rebackFlag", false, "REBACK_FLAG");
        public final static Property MedicalSumFee = new Property(11, double.class, "medicalSumFee", false, "MEDICAL_SUM_FEE");
        public final static Property DisabilitySumFee = new Property(12, double.class, "disabilitySumFee", false, "DISABILITY_SUM_FEE");
        public final static Property SumFee = new Property(13, double.class, "sumFee", false, "SUM_FEE");
        public final static Property CreateBy = new Property(14, String.class, "createBy", false, "CREATE_BY");
        public final static Property CreateDate = new Property(15, String.class, "createDate", false, "CREATE_DATE");
        public final static Property UpdateBy = new Property(16, String.class, "updateBy", false, "UPDATE_BY");
        public final static Property UpdateDate = new Property(17, String.class, "updateDate", false, "UPDATE_DATE");
        public final static Property InjuryName = new Property(18, String.class, "injuryName", false, "INJURY_NAME");
        public final static Property InjurySex = new Property(19, String.class, "injurySex", false, "INJURY_SEX");
        public final static Property InjuryAge = new Property(20, String.class, "injuryAge", false, "INJURY_AGE");
        public final static Property InjuryPhone = new Property(21, String.class, "injuryPhone", false, "INJURY_PHONE");
        public final static Property IdCardType = new Property(22, String.class, "idCardType", false, "ID_CARD_TYPE");
        public final static Property IdCardTypeCode = new Property(23, String.class, "idCardTypeCode", false, "ID_CARD_TYPE_CODE");
        public final static Property IdCardNo = new Property(24, String.class, "idCardNo", false, "ID_CARD_NO");
        public final static Property InjuryDate = new Property(25, String.class, "injuryDate", false, "INJURY_DATE");
        public final static Property RiskCode = new Property(26, String.class, "riskCode", false, "RISK_CODE");
        public final static Property RiskName = new Property(27, String.class, "riskName", false, "RISK_NAME");
        public final static Property ItemCode = new Property(28, String.class, "itemCode", false, "ITEM_CODE");
        public final static Property ItemName = new Property(29, String.class, "itemName", false, "ITEM_NAME");
        public final static Property InjuryPart = new Property(30, String.class, "injuryPart", false, "INJURY_PART");
        public final static Property DangerSeat = new Property(31, String.class, "dangerSeat", false, "DANGER_SEAT");
        public final static Property InjuryType = new Property(32, String.class, "injuryType", false, "INJURY_TYPE");
        public final static Property InjuryTypeCode = new Property(33, String.class, "injuryTypeCode", false, "INJURY_TYPE_CODE");
        public final static Property CasualtyType = new Property(34, String.class, "casualtyType", false, "CASUALTY_TYPE");
        public final static Property CasualtyTypeCode = new Property(35, String.class, "casualtyTypeCode", false, "CASUALTY_TYPE_CODE");
        public final static Property InjuryGrade = new Property(36, String.class, "injuryGrade", false, "INJURY_GRADE");
        public final static Property InjuryGradeCode = new Property(37, String.class, "injuryGradeCode", false, "INJURY_GRADE_CODE");
        public final static Property InjuryDegree = new Property(38, String.class, "injuryDegree", false, "INJURY_DEGREE");
        public final static Property InjuryDegreeCode = new Property(39, String.class, "injuryDegreeCode", false, "INJURY_DEGREE_CODE");
        public final static Property InjuryDescription = new Property(40, String.class, "injuryDescription", false, "INJURY_DESCRIPTION");
        public final static Property SurveyReport = new Property(41, String.class, "surveyReport", false, "SURVEY_REPORT");
        public final static Property VisitHospital = new Property(42, String.class, "visitHospital", false, "VISIT_HOSPITAL");
        public final static Property VisitMode = new Property(43, String.class, "visitMode", false, "VISIT_MODE");
        public final static Property VisitModeCode = new Property(44, String.class, "visitModeCode", false, "VISIT_MODE_CODE");
        public final static Property IsSelfMedical = new Property(45, String.class, "isSelfMedical", false, "IS_SELF_MEDICAL");
        public final static Property HouseholdRegister = new Property(46, String.class, "householdRegister", false, "HOUSEHOLD_REGISTER");
        public final static Property Profession = new Property(47, String.class, "profession", false, "PROFESSION");
        public final static Property ProfessionCode = new Property(48, String.class, "professionCode", false, "PROFESSION_CODE");
        public final static Property WorkAddr = new Property(49, String.class, "workAddr", false, "WORK_ADDR");
        public final static Property WorkType = new Property(50, String.class, "workType", false, "WORK_TYPE");
        public final static Property WorkTypeCode = new Property(51, String.class, "workTypeCode", false, "WORK_TYPE_CODE");
        public final static Property Income = new Property(52, String.class, "income", false, "INCOME");
        public final static Property IncomeCode = new Property(53, String.class, "incomeCode", false, "INCOME_CODE");
        public final static Property IncomeByMonth = new Property(54, String.class, "incomeByMonth", false, "INCOME_BY_MONTH");
        public final static Property TrackTimes = new Property(55, String.class, "trackTimes", false, "TRACK_TIMES");
        public final static Property TrackDetailDescription = new Property(56, String.class, "trackDetailDescription", false, "TRACK_DETAIL_DESCRIPTION");
        public final static Property DeadTime = new Property(57, String.class, "deadTime", false, "DEAD_TIME");
        public final static Property IdentificationInstitution = new Property(58, String.class, "identificationInstitution", false, "IDENTIFICATION_INSTITUTION");
        public final static Property IdentificationInstitutionCode = new Property(59, String.class, "identificationInstitutionCode", false, "IDENTIFICATION_INSTITUTION_CODE");
        public final static Property IsInsuranceLiability = new Property(60, String.class, "isInsuranceLiability", false, "IS_INSURANCE_LIABILITY");
        public final static Property PaySelfFlag = new Property(61, String.class, "paySelfFlag", false, "PAY_SELF_FLAG");
        public final static Property NoLiabilityCompensation = new Property(62, String.class, "noLiabilityCompensation", false, "NO_LIABILITY_COMPENSATION");
        public final static Property IsTrackOver = new Property(63, String.class, "isTrackOver", false, "IS_TRACK_OVER");
    }


    public InjuryMainInfoDao(DaoConfig config) {
        super(config);
    }
    
    public InjuryMainInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"INJURY_MAIN_INFO\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"REPORT_CODE\" TEXT," + // 1: reportCode
                "\"TASK_NO\" TEXT," + // 2: taskNo
                "\"EVAL_ID\" TEXT," + // 3: evalId
                "\"TASK_TYPE\" TEXT," + // 4: taskType
                "\"TASK_TYPE_CODE\" TEXT," + // 5: taskTypeCode
                "\"LOSS_TYPE\" TEXT," + // 6: lossType
                "\"LOSS_TYPE_CODE\" TEXT," + // 7: lossTypeCode
                "\"OPERATE_TIME\" TEXT," + // 8: operateTime
                "\"COMPLETEDFLAG\" TEXT," + // 9: completedflag
                "\"REBACK_FLAG\" TEXT," + // 10: rebackFlag
                "\"MEDICAL_SUM_FEE\" REAL NOT NULL ," + // 11: medicalSumFee
                "\"DISABILITY_SUM_FEE\" REAL NOT NULL ," + // 12: disabilitySumFee
                "\"SUM_FEE\" REAL NOT NULL ," + // 13: sumFee
                "\"CREATE_BY\" TEXT," + // 14: createBy
                "\"CREATE_DATE\" TEXT," + // 15: createDate
                "\"UPDATE_BY\" TEXT," + // 16: updateBy
                "\"UPDATE_DATE\" TEXT," + // 17: updateDate
                "\"INJURY_NAME\" TEXT," + // 18: injuryName
                "\"INJURY_SEX\" TEXT," + // 19: injurySex
                "\"INJURY_AGE\" TEXT," + // 20: injuryAge
                "\"INJURY_PHONE\" TEXT," + // 21: injuryPhone
                "\"ID_CARD_TYPE\" TEXT," + // 22: idCardType
                "\"ID_CARD_TYPE_CODE\" TEXT," + // 23: idCardTypeCode
                "\"ID_CARD_NO\" TEXT," + // 24: idCardNo
                "\"INJURY_DATE\" TEXT," + // 25: injuryDate
                "\"RISK_CODE\" TEXT," + // 26: riskCode
                "\"RISK_NAME\" TEXT," + // 27: riskName
                "\"ITEM_CODE\" TEXT," + // 28: itemCode
                "\"ITEM_NAME\" TEXT," + // 29: itemName
                "\"INJURY_PART\" TEXT," + // 30: injuryPart
                "\"DANGER_SEAT\" TEXT," + // 31: dangerSeat
                "\"INJURY_TYPE\" TEXT," + // 32: injuryType
                "\"INJURY_TYPE_CODE\" TEXT," + // 33: injuryTypeCode
                "\"CASUALTY_TYPE\" TEXT," + // 34: casualtyType
                "\"CASUALTY_TYPE_CODE\" TEXT," + // 35: casualtyTypeCode
                "\"INJURY_GRADE\" TEXT," + // 36: injuryGrade
                "\"INJURY_GRADE_CODE\" TEXT," + // 37: injuryGradeCode
                "\"INJURY_DEGREE\" TEXT," + // 38: injuryDegree
                "\"INJURY_DEGREE_CODE\" TEXT," + // 39: injuryDegreeCode
                "\"INJURY_DESCRIPTION\" TEXT," + // 40: injuryDescription
                "\"SURVEY_REPORT\" TEXT," + // 41: surveyReport
                "\"VISIT_HOSPITAL\" TEXT," + // 42: visitHospital
                "\"VISIT_MODE\" TEXT," + // 43: visitMode
                "\"VISIT_MODE_CODE\" TEXT," + // 44: visitModeCode
                "\"IS_SELF_MEDICAL\" TEXT," + // 45: isSelfMedical
                "\"HOUSEHOLD_REGISTER\" TEXT," + // 46: householdRegister
                "\"PROFESSION\" TEXT," + // 47: profession
                "\"PROFESSION_CODE\" TEXT," + // 48: professionCode
                "\"WORK_ADDR\" TEXT," + // 49: workAddr
                "\"WORK_TYPE\" TEXT," + // 50: workType
                "\"WORK_TYPE_CODE\" TEXT," + // 51: workTypeCode
                "\"INCOME\" TEXT," + // 52: income
                "\"INCOME_CODE\" TEXT," + // 53: incomeCode
                "\"INCOME_BY_MONTH\" TEXT," + // 54: incomeByMonth
                "\"TRACK_TIMES\" TEXT," + // 55: trackTimes
                "\"TRACK_DETAIL_DESCRIPTION\" TEXT," + // 56: trackDetailDescription
                "\"DEAD_TIME\" TEXT," + // 57: deadTime
                "\"IDENTIFICATION_INSTITUTION\" TEXT," + // 58: identificationInstitution
                "\"IDENTIFICATION_INSTITUTION_CODE\" TEXT," + // 59: identificationInstitutionCode
                "\"IS_INSURANCE_LIABILITY\" TEXT," + // 60: isInsuranceLiability
                "\"PAY_SELF_FLAG\" TEXT," + // 61: paySelfFlag
                "\"NO_LIABILITY_COMPENSATION\" TEXT," + // 62: noLiabilityCompensation
                "\"IS_TRACK_OVER\" TEXT);"); // 63: isTrackOver
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"INJURY_MAIN_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, InjuryMainInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(2, reportCode);
        }
 
        String taskNo = entity.getTaskNo();
        if (taskNo != null) {
            stmt.bindString(3, taskNo);
        }
 
        String evalId = entity.getEvalId();
        if (evalId != null) {
            stmt.bindString(4, evalId);
        }
 
        String taskType = entity.getTaskType();
        if (taskType != null) {
            stmt.bindString(5, taskType);
        }
 
        String taskTypeCode = entity.getTaskTypeCode();
        if (taskTypeCode != null) {
            stmt.bindString(6, taskTypeCode);
        }
 
        String lossType = entity.getLossType();
        if (lossType != null) {
            stmt.bindString(7, lossType);
        }
 
        String lossTypeCode = entity.getLossTypeCode();
        if (lossTypeCode != null) {
            stmt.bindString(8, lossTypeCode);
        }
 
        String operateTime = entity.getOperateTime();
        if (operateTime != null) {
            stmt.bindString(9, operateTime);
        }
 
        String completedflag = entity.getCompletedflag();
        if (completedflag != null) {
            stmt.bindString(10, completedflag);
        }
 
        String rebackFlag = entity.getRebackFlag();
        if (rebackFlag != null) {
            stmt.bindString(11, rebackFlag);
        }
        stmt.bindDouble(12, entity.getMedicalSumFee());
        stmt.bindDouble(13, entity.getDisabilitySumFee());
        stmt.bindDouble(14, entity.getSumFee());
 
        String createBy = entity.getCreateBy();
        if (createBy != null) {
            stmt.bindString(15, createBy);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(16, createDate);
        }
 
        String updateBy = entity.getUpdateBy();
        if (updateBy != null) {
            stmt.bindString(17, updateBy);
        }
 
        String updateDate = entity.getUpdateDate();
        if (updateDate != null) {
            stmt.bindString(18, updateDate);
        }
 
        String injuryName = entity.getInjuryName();
        if (injuryName != null) {
            stmt.bindString(19, injuryName);
        }
 
        String injurySex = entity.getInjurySex();
        if (injurySex != null) {
            stmt.bindString(20, injurySex);
        }
 
        String injuryAge = entity.getInjuryAge();
        if (injuryAge != null) {
            stmt.bindString(21, injuryAge);
        }
 
        String injuryPhone = entity.getInjuryPhone();
        if (injuryPhone != null) {
            stmt.bindString(22, injuryPhone);
        }
 
        String idCardType = entity.getIdCardType();
        if (idCardType != null) {
            stmt.bindString(23, idCardType);
        }
 
        String idCardTypeCode = entity.getIdCardTypeCode();
        if (idCardTypeCode != null) {
            stmt.bindString(24, idCardTypeCode);
        }
 
        String idCardNo = entity.getIdCardNo();
        if (idCardNo != null) {
            stmt.bindString(25, idCardNo);
        }
 
        String injuryDate = entity.getInjuryDate();
        if (injuryDate != null) {
            stmt.bindString(26, injuryDate);
        }
 
        String riskCode = entity.getRiskCode();
        if (riskCode != null) {
            stmt.bindString(27, riskCode);
        }
 
        String riskName = entity.getRiskName();
        if (riskName != null) {
            stmt.bindString(28, riskName);
        }
 
        String itemCode = entity.getItemCode();
        if (itemCode != null) {
            stmt.bindString(29, itemCode);
        }
 
        String itemName = entity.getItemName();
        if (itemName != null) {
            stmt.bindString(30, itemName);
        }
 
        String injuryPart = entity.getInjuryPart();
        if (injuryPart != null) {
            stmt.bindString(31, injuryPart);
        }
 
        String dangerSeat = entity.getDangerSeat();
        if (dangerSeat != null) {
            stmt.bindString(32, dangerSeat);
        }
 
        String injuryType = entity.getInjuryType();
        if (injuryType != null) {
            stmt.bindString(33, injuryType);
        }
 
        String injuryTypeCode = entity.getInjuryTypeCode();
        if (injuryTypeCode != null) {
            stmt.bindString(34, injuryTypeCode);
        }
 
        String casualtyType = entity.getCasualtyType();
        if (casualtyType != null) {
            stmt.bindString(35, casualtyType);
        }
 
        String casualtyTypeCode = entity.getCasualtyTypeCode();
        if (casualtyTypeCode != null) {
            stmt.bindString(36, casualtyTypeCode);
        }
 
        String injuryGrade = entity.getInjuryGrade();
        if (injuryGrade != null) {
            stmt.bindString(37, injuryGrade);
        }
 
        String injuryGradeCode = entity.getInjuryGradeCode();
        if (injuryGradeCode != null) {
            stmt.bindString(38, injuryGradeCode);
        }
 
        String injuryDegree = entity.getInjuryDegree();
        if (injuryDegree != null) {
            stmt.bindString(39, injuryDegree);
        }
 
        String injuryDegreeCode = entity.getInjuryDegreeCode();
        if (injuryDegreeCode != null) {
            stmt.bindString(40, injuryDegreeCode);
        }
 
        String injuryDescription = entity.getInjuryDescription();
        if (injuryDescription != null) {
            stmt.bindString(41, injuryDescription);
        }
 
        String surveyReport = entity.getSurveyReport();
        if (surveyReport != null) {
            stmt.bindString(42, surveyReport);
        }
 
        String visitHospital = entity.getVisitHospital();
        if (visitHospital != null) {
            stmt.bindString(43, visitHospital);
        }
 
        String visitMode = entity.getVisitMode();
        if (visitMode != null) {
            stmt.bindString(44, visitMode);
        }
 
        String visitModeCode = entity.getVisitModeCode();
        if (visitModeCode != null) {
            stmt.bindString(45, visitModeCode);
        }
 
        String isSelfMedical = entity.getIsSelfMedical();
        if (isSelfMedical != null) {
            stmt.bindString(46, isSelfMedical);
        }
 
        String householdRegister = entity.getHouseholdRegister();
        if (householdRegister != null) {
            stmt.bindString(47, householdRegister);
        }
 
        String profession = entity.getProfession();
        if (profession != null) {
            stmt.bindString(48, profession);
        }
 
        String professionCode = entity.getProfessionCode();
        if (professionCode != null) {
            stmt.bindString(49, professionCode);
        }
 
        String workAddr = entity.getWorkAddr();
        if (workAddr != null) {
            stmt.bindString(50, workAddr);
        }
 
        String workType = entity.getWorkType();
        if (workType != null) {
            stmt.bindString(51, workType);
        }
 
        String workTypeCode = entity.getWorkTypeCode();
        if (workTypeCode != null) {
            stmt.bindString(52, workTypeCode);
        }
 
        String income = entity.getIncome();
        if (income != null) {
            stmt.bindString(53, income);
        }
 
        String incomeCode = entity.getIncomeCode();
        if (incomeCode != null) {
            stmt.bindString(54, incomeCode);
        }
 
        String incomeByMonth = entity.getIncomeByMonth();
        if (incomeByMonth != null) {
            stmt.bindString(55, incomeByMonth);
        }
 
        String trackTimes = entity.getTrackTimes();
        if (trackTimes != null) {
            stmt.bindString(56, trackTimes);
        }
 
        String trackDetailDescription = entity.getTrackDetailDescription();
        if (trackDetailDescription != null) {
            stmt.bindString(57, trackDetailDescription);
        }
 
        String deadTime = entity.getDeadTime();
        if (deadTime != null) {
            stmt.bindString(58, deadTime);
        }
 
        String identificationInstitution = entity.getIdentificationInstitution();
        if (identificationInstitution != null) {
            stmt.bindString(59, identificationInstitution);
        }
 
        String identificationInstitutionCode = entity.getIdentificationInstitutionCode();
        if (identificationInstitutionCode != null) {
            stmt.bindString(60, identificationInstitutionCode);
        }
 
        String isInsuranceLiability = entity.getIsInsuranceLiability();
        if (isInsuranceLiability != null) {
            stmt.bindString(61, isInsuranceLiability);
        }
 
        String paySelfFlag = entity.getPaySelfFlag();
        if (paySelfFlag != null) {
            stmt.bindString(62, paySelfFlag);
        }
 
        String noLiabilityCompensation = entity.getNoLiabilityCompensation();
        if (noLiabilityCompensation != null) {
            stmt.bindString(63, noLiabilityCompensation);
        }
 
        String isTrackOver = entity.getIsTrackOver();
        if (isTrackOver != null) {
            stmt.bindString(64, isTrackOver);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, InjuryMainInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(2, reportCode);
        }
 
        String taskNo = entity.getTaskNo();
        if (taskNo != null) {
            stmt.bindString(3, taskNo);
        }
 
        String evalId = entity.getEvalId();
        if (evalId != null) {
            stmt.bindString(4, evalId);
        }
 
        String taskType = entity.getTaskType();
        if (taskType != null) {
            stmt.bindString(5, taskType);
        }
 
        String taskTypeCode = entity.getTaskTypeCode();
        if (taskTypeCode != null) {
            stmt.bindString(6, taskTypeCode);
        }
 
        String lossType = entity.getLossType();
        if (lossType != null) {
            stmt.bindString(7, lossType);
        }
 
        String lossTypeCode = entity.getLossTypeCode();
        if (lossTypeCode != null) {
            stmt.bindString(8, lossTypeCode);
        }
 
        String operateTime = entity.getOperateTime();
        if (operateTime != null) {
            stmt.bindString(9, operateTime);
        }
 
        String completedflag = entity.getCompletedflag();
        if (completedflag != null) {
            stmt.bindString(10, completedflag);
        }
 
        String rebackFlag = entity.getRebackFlag();
        if (rebackFlag != null) {
            stmt.bindString(11, rebackFlag);
        }
        stmt.bindDouble(12, entity.getMedicalSumFee());
        stmt.bindDouble(13, entity.getDisabilitySumFee());
        stmt.bindDouble(14, entity.getSumFee());
 
        String createBy = entity.getCreateBy();
        if (createBy != null) {
            stmt.bindString(15, createBy);
        }
 
        String createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindString(16, createDate);
        }
 
        String updateBy = entity.getUpdateBy();
        if (updateBy != null) {
            stmt.bindString(17, updateBy);
        }
 
        String updateDate = entity.getUpdateDate();
        if (updateDate != null) {
            stmt.bindString(18, updateDate);
        }
 
        String injuryName = entity.getInjuryName();
        if (injuryName != null) {
            stmt.bindString(19, injuryName);
        }
 
        String injurySex = entity.getInjurySex();
        if (injurySex != null) {
            stmt.bindString(20, injurySex);
        }
 
        String injuryAge = entity.getInjuryAge();
        if (injuryAge != null) {
            stmt.bindString(21, injuryAge);
        }
 
        String injuryPhone = entity.getInjuryPhone();
        if (injuryPhone != null) {
            stmt.bindString(22, injuryPhone);
        }
 
        String idCardType = entity.getIdCardType();
        if (idCardType != null) {
            stmt.bindString(23, idCardType);
        }
 
        String idCardTypeCode = entity.getIdCardTypeCode();
        if (idCardTypeCode != null) {
            stmt.bindString(24, idCardTypeCode);
        }
 
        String idCardNo = entity.getIdCardNo();
        if (idCardNo != null) {
            stmt.bindString(25, idCardNo);
        }
 
        String injuryDate = entity.getInjuryDate();
        if (injuryDate != null) {
            stmt.bindString(26, injuryDate);
        }
 
        String riskCode = entity.getRiskCode();
        if (riskCode != null) {
            stmt.bindString(27, riskCode);
        }
 
        String riskName = entity.getRiskName();
        if (riskName != null) {
            stmt.bindString(28, riskName);
        }
 
        String itemCode = entity.getItemCode();
        if (itemCode != null) {
            stmt.bindString(29, itemCode);
        }
 
        String itemName = entity.getItemName();
        if (itemName != null) {
            stmt.bindString(30, itemName);
        }
 
        String injuryPart = entity.getInjuryPart();
        if (injuryPart != null) {
            stmt.bindString(31, injuryPart);
        }
 
        String dangerSeat = entity.getDangerSeat();
        if (dangerSeat != null) {
            stmt.bindString(32, dangerSeat);
        }
 
        String injuryType = entity.getInjuryType();
        if (injuryType != null) {
            stmt.bindString(33, injuryType);
        }
 
        String injuryTypeCode = entity.getInjuryTypeCode();
        if (injuryTypeCode != null) {
            stmt.bindString(34, injuryTypeCode);
        }
 
        String casualtyType = entity.getCasualtyType();
        if (casualtyType != null) {
            stmt.bindString(35, casualtyType);
        }
 
        String casualtyTypeCode = entity.getCasualtyTypeCode();
        if (casualtyTypeCode != null) {
            stmt.bindString(36, casualtyTypeCode);
        }
 
        String injuryGrade = entity.getInjuryGrade();
        if (injuryGrade != null) {
            stmt.bindString(37, injuryGrade);
        }
 
        String injuryGradeCode = entity.getInjuryGradeCode();
        if (injuryGradeCode != null) {
            stmt.bindString(38, injuryGradeCode);
        }
 
        String injuryDegree = entity.getInjuryDegree();
        if (injuryDegree != null) {
            stmt.bindString(39, injuryDegree);
        }
 
        String injuryDegreeCode = entity.getInjuryDegreeCode();
        if (injuryDegreeCode != null) {
            stmt.bindString(40, injuryDegreeCode);
        }
 
        String injuryDescription = entity.getInjuryDescription();
        if (injuryDescription != null) {
            stmt.bindString(41, injuryDescription);
        }
 
        String surveyReport = entity.getSurveyReport();
        if (surveyReport != null) {
            stmt.bindString(42, surveyReport);
        }
 
        String visitHospital = entity.getVisitHospital();
        if (visitHospital != null) {
            stmt.bindString(43, visitHospital);
        }
 
        String visitMode = entity.getVisitMode();
        if (visitMode != null) {
            stmt.bindString(44, visitMode);
        }
 
        String visitModeCode = entity.getVisitModeCode();
        if (visitModeCode != null) {
            stmt.bindString(45, visitModeCode);
        }
 
        String isSelfMedical = entity.getIsSelfMedical();
        if (isSelfMedical != null) {
            stmt.bindString(46, isSelfMedical);
        }
 
        String householdRegister = entity.getHouseholdRegister();
        if (householdRegister != null) {
            stmt.bindString(47, householdRegister);
        }
 
        String profession = entity.getProfession();
        if (profession != null) {
            stmt.bindString(48, profession);
        }
 
        String professionCode = entity.getProfessionCode();
        if (professionCode != null) {
            stmt.bindString(49, professionCode);
        }
 
        String workAddr = entity.getWorkAddr();
        if (workAddr != null) {
            stmt.bindString(50, workAddr);
        }
 
        String workType = entity.getWorkType();
        if (workType != null) {
            stmt.bindString(51, workType);
        }
 
        String workTypeCode = entity.getWorkTypeCode();
        if (workTypeCode != null) {
            stmt.bindString(52, workTypeCode);
        }
 
        String income = entity.getIncome();
        if (income != null) {
            stmt.bindString(53, income);
        }
 
        String incomeCode = entity.getIncomeCode();
        if (incomeCode != null) {
            stmt.bindString(54, incomeCode);
        }
 
        String incomeByMonth = entity.getIncomeByMonth();
        if (incomeByMonth != null) {
            stmt.bindString(55, incomeByMonth);
        }
 
        String trackTimes = entity.getTrackTimes();
        if (trackTimes != null) {
            stmt.bindString(56, trackTimes);
        }
 
        String trackDetailDescription = entity.getTrackDetailDescription();
        if (trackDetailDescription != null) {
            stmt.bindString(57, trackDetailDescription);
        }
 
        String deadTime = entity.getDeadTime();
        if (deadTime != null) {
            stmt.bindString(58, deadTime);
        }
 
        String identificationInstitution = entity.getIdentificationInstitution();
        if (identificationInstitution != null) {
            stmt.bindString(59, identificationInstitution);
        }
 
        String identificationInstitutionCode = entity.getIdentificationInstitutionCode();
        if (identificationInstitutionCode != null) {
            stmt.bindString(60, identificationInstitutionCode);
        }
 
        String isInsuranceLiability = entity.getIsInsuranceLiability();
        if (isInsuranceLiability != null) {
            stmt.bindString(61, isInsuranceLiability);
        }
 
        String paySelfFlag = entity.getPaySelfFlag();
        if (paySelfFlag != null) {
            stmt.bindString(62, paySelfFlag);
        }
 
        String noLiabilityCompensation = entity.getNoLiabilityCompensation();
        if (noLiabilityCompensation != null) {
            stmt.bindString(63, noLiabilityCompensation);
        }
 
        String isTrackOver = entity.getIsTrackOver();
        if (isTrackOver != null) {
            stmt.bindString(64, isTrackOver);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public InjuryMainInfo readEntity(Cursor cursor, int offset) {
        InjuryMainInfo entity = new InjuryMainInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // reportCode
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // taskNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // evalId
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // taskType
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // taskTypeCode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // lossType
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // lossTypeCode
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // operateTime
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // completedflag
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // rebackFlag
            cursor.getDouble(offset + 11), // medicalSumFee
            cursor.getDouble(offset + 12), // disabilitySumFee
            cursor.getDouble(offset + 13), // sumFee
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // createBy
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // createDate
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // updateBy
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // updateDate
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // injuryName
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // injurySex
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // injuryAge
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // injuryPhone
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // idCardType
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // idCardTypeCode
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // idCardNo
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // injuryDate
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // riskCode
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // riskName
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // itemCode
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // itemName
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // injuryPart
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // dangerSeat
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // injuryType
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // injuryTypeCode
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // casualtyType
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // casualtyTypeCode
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // injuryGrade
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // injuryGradeCode
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // injuryDegree
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // injuryDegreeCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // injuryDescription
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // surveyReport
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // visitHospital
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // visitMode
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // visitModeCode
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // isSelfMedical
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // householdRegister
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // profession
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // professionCode
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // workAddr
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // workType
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // workTypeCode
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // income
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // incomeCode
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // incomeByMonth
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // trackTimes
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // trackDetailDescription
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // deadTime
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // identificationInstitution
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // identificationInstitutionCode
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // isInsuranceLiability
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // paySelfFlag
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // noLiabilityCompensation
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63) // isTrackOver
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, InjuryMainInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setReportCode(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTaskNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setEvalId(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTaskType(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setTaskTypeCode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setLossType(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setLossTypeCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setOperateTime(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCompletedflag(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setRebackFlag(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setMedicalSumFee(cursor.getDouble(offset + 11));
        entity.setDisabilitySumFee(cursor.getDouble(offset + 12));
        entity.setSumFee(cursor.getDouble(offset + 13));
        entity.setCreateBy(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCreateDate(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setUpdateBy(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setUpdateDate(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setInjuryName(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setInjurySex(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setInjuryAge(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setInjuryPhone(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setIdCardType(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setIdCardTypeCode(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setIdCardNo(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setInjuryDate(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setRiskCode(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setRiskName(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setItemCode(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setItemName(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setInjuryPart(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setDangerSeat(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setInjuryType(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setInjuryTypeCode(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setCasualtyType(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCasualtyTypeCode(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setInjuryGrade(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setInjuryGradeCode(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setInjuryDegree(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setInjuryDegreeCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setInjuryDescription(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setSurveyReport(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setVisitHospital(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setVisitMode(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setVisitModeCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setIsSelfMedical(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setHouseholdRegister(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setProfession(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setProfessionCode(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setWorkAddr(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setWorkType(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setWorkTypeCode(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setIncome(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setIncomeCode(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setIncomeByMonth(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setTrackTimes(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setTrackDetailDescription(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setDeadTime(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setIdentificationInstitution(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setIdentificationInstitutionCode(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setIsInsuranceLiability(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setPaySelfFlag(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setNoLiabilityCompensation(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setIsTrackOver(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
     }
    
    @Override
    protected final String updateKeyAfterInsert(InjuryMainInfo entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public String getKey(InjuryMainInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(InjuryMainInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
