package com.hl.contract.table.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.hl.contract.table.model.SurveyMainInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SURVEY_MAIN_INFO".
*/
public class SurveyMainInfoDao extends AbstractDao<SurveyMainInfo, String> {

    public static final String TABLENAME = "SURVEY_MAIN_INFO";

    /**
     * Properties of entity SurveyMainInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property ReportNo = new Property(1, String.class, "reportNo", false, "REPORT_NO");
        public final static Property TaskNo = new Property(2, String.class, "taskNo", false, "TASK_NO");
        public final static Property EvalId = new Property(3, String.class, "evalId", false, "EVAL_ID");
        public final static Property ForcePolicyCode = new Property(4, String.class, "forcePolicyCode", false, "FORCE_POLICY_CODE");
        public final static Property BusinessPolicyNo = new Property(5, String.class, "businessPolicyNo", false, "BUSINESS_POLICY_NO");
        public final static Property ReportType = new Property(6, String.class, "reportType", false, "REPORT_TYPE");
        public final static Property ReportTypeCode = new Property(7, String.class, "reportTypeCode", false, "REPORT_TYPE_CODE");
        public final static Property ReportTime = new Property(8, String.class, "reportTime", false, "REPORT_TIME");
        public final static Property ReportPersonName = new Property(9, String.class, "reportPersonName", false, "REPORT_PERSON_NAME");
        public final static Property ReportPersonContact = new Property(10, String.class, "reportPersonContact", false, "REPORT_PERSON_CONTACT");
        public final static Property ReportPhone = new Property(11, String.class, "reportPhone", false, "REPORT_PHONE");
        public final static Property InsuredPersonName = new Property(12, String.class, "insuredPersonName", false, "INSURED_PERSON_NAME");
        public final static Property InsuredPersonCode = new Property(13, String.class, "insuredPersonCode", false, "INSURED_PERSON_CODE");
        public final static Property InsureCompanyCode = new Property(14, String.class, "insureCompanyCode", false, "INSURE_COMPANY_CODE");
        public final static Property InsureCompanyName = new Property(15, String.class, "insureCompanyName", false, "INSURE_COMPANY_NAME");
        public final static Property InsureVehicleCode = new Property(16, String.class, "insureVehicleCode", false, "INSURE_VEHICLE_CODE");
        public final static Property InsureVehicleName = new Property(17, String.class, "insureVehicleName", false, "INSURE_VEHICLE_NAME");
        public final static Property CompanyCode = new Property(18, String.class, "companyCode", false, "COMPANY_CODE");
        public final static Property CompanyName = new Property(19, String.class, "companyName", false, "COMPANY_NAME");
        public final static Property BranchCompanyCode = new Property(20, String.class, "branchCompanyCode", false, "BRANCH_COMPANY_CODE");
        public final static Property BranchCompanyName = new Property(21, String.class, "branchCompanyName", false, "BRANCH_COMPANY_NAME");
        public final static Property PlateNo = new Property(22, String.class, "plateNo", false, "PLATE_NO");
        public final static Property VehicleType = new Property(23, String.class, "vehicleType", false, "VEHICLE_TYPE");
        public final static Property VehicleTypeCode = new Property(24, String.class, "vehicleTypeCode", false, "VEHICLE_TYPE_CODE");
        public final static Property VehicleModel = new Property(25, String.class, "vehicleModel", false, "VEHICLE_MODEL");
        public final static Property EngineModel = new Property(26, String.class, "engineModel", false, "ENGINE_MODEL");
        public final static Property DriverNo = new Property(27, String.class, "driverNo", false, "DRIVER_NO");
        public final static Property DriverType = new Property(28, String.class, "driverType", false, "DRIVER_TYPE");
        public final static Property DriverTypeCode = new Property(29, String.class, "driverTypeCode", false, "DRIVER_TYPE_CODE");
        public final static Property Vin = new Property(30, String.class, "vin", false, "VIN");
        public final static Property AccidentFrequency = new Property(31, String.class, "accidentFrequency", false, "ACCIDENT_FREQUENCY");
        public final static Property AccidentTime = new Property(32, String.class, "accidentTime", false, "ACCIDENT_TIME");
        public final static Property AccidentPlace = new Property(33, String.class, "accidentPlace", false, "ACCIDENT_PLACE");
        public final static Property AccidentDescription = new Property(34, String.class, "accidentDescription", false, "ACCIDENT_DESCRIPTION");
        public final static Property AccidentCause = new Property(35, String.class, "accidentCause", false, "ACCIDENT_CAUSE");
        public final static Property AccidentCauseCode = new Property(36, String.class, "accidentCauseCode", false, "ACCIDENT_CAUSE_CODE");
        public final static Property DriverName = new Property(37, String.class, "driverName", false, "DRIVER_NAME");
        public final static Property DriverLicenseType = new Property(38, String.class, "driverLicenseType", false, "DRIVER_LICENSE_TYPE");
        public final static Property DriverLicenseTypeCode = new Property(39, String.class, "driverLicenseTypeCode", false, "DRIVER_LICENSE_TYPE_CODE");
        public final static Property DriverLicenseNo = new Property(40, String.class, "driverLicenseNo", false, "DRIVER_LICENSE_NO");
        public final static Property DriverContact = new Property(41, String.class, "driverContact", false, "DRIVER_CONTACT");
        public final static Property AccidentDriverType = new Property(42, String.class, "accidentDriverType", false, "ACCIDENT_DRIVER_TYPE");
        public final static Property AccidentArea = new Property(43, String.class, "accidentArea", false, "ACCIDENT_AREA");
        public final static Property AccidentAreaCode = new Property(44, String.class, "accidentAreaCode", false, "ACCIDENT_AREA_CODE");
        public final static Property AccidentProvince = new Property(45, String.class, "accidentProvince", false, "ACCIDENT_PROVINCE");
        public final static Property AccidentCity = new Property(46, String.class, "accidentCity", false, "ACCIDENT_CITY");
        public final static Property AccidentPlaceStreet = new Property(47, String.class, "accidentPlaceStreet", false, "ACCIDENT_PLACE_STREET");
        public final static Property AccidentPlaceZipCode = new Property(48, String.class, "accidentPlaceZipCode", false, "ACCIDENT_PLACE_ZIP_CODE");
        public final static Property AccidentWeather = new Property(49, String.class, "accidentWeather", false, "ACCIDENT_WEATHER");
        public final static Property Longitude = new Property(50, String.class, "longitude", false, "LONGITUDE");
        public final static Property Latitude = new Property(51, String.class, "latitude", false, "LATITUDE");
        public final static Property SurveyStartTime = new Property(52, String.class, "surveyStartTime", false, "SURVEY_START_TIME");
        public final static Property SurveyEndTime = new Property(53, String.class, "surveyEndTime", false, "SURVEY_END_TIME");
        public final static Property SurveyTime = new Property(54, String.class, "surveyTime", false, "SURVEY_TIME");
        public final static Property SurveyPlace = new Property(55, String.class, "surveyPlace", false, "SURVEY_PLACE");
        public final static Property SurveyDes = new Property(56, String.class, "surveyDes", false, "SURVEY_DES");
        public final static Property SurveyName = new Property(57, String.class, "surveyName", false, "SURVEY_NAME");
        public final static Property SurveyCode = new Property(58, String.class, "surveyCode", false, "SURVEY_CODE");
        public final static Property SurveyName2 = new Property(59, String.class, "surveyName2", false, "SURVEY_NAME2");
        public final static Property SurveyCode2 = new Property(60, String.class, "surveyCode2", false, "SURVEY_CODE2");
        public final static Property SurveyCeritCode = new Property(61, String.class, "surveyCeritCode", false, "SURVEY_CERIT_CODE");
        public final static Property SurveyCeritCode2 = new Property(62, String.class, "surveyCeritCode2", false, "SURVEY_CERIT_CODE2");
        public final static Property SurveyCompanyCode = new Property(63, String.class, "surveyCompanyCode", false, "SURVEY_COMPANY_CODE");
        public final static Property SurveyCompanyName = new Property(64, String.class, "surveyCompanyName", false, "SURVEY_COMPANY_NAME");
        public final static Property AccidentType = new Property(65, String.class, "accidentType", false, "ACCIDENT_TYPE");
        public final static Property AccidentTypeCode = new Property(66, String.class, "accidentTypeCode", false, "ACCIDENT_TYPE_CODE");
        public final static Property ManageType = new Property(67, String.class, "manageType", false, "MANAGE_TYPE");
        public final static Property ManageTypeCode = new Property(68, String.class, "manageTypeCode", false, "MANAGE_TYPE_CODE");
        public final static Property AccidentDuty = new Property(69, String.class, "accidentDuty", false, "ACCIDENT_DUTY");
        public final static Property AccidentDutyCode = new Property(70, String.class, "accidentDutyCode", false, "ACCIDENT_DUTY_CODE");
        public final static Property AccidentReason = new Property(71, String.class, "accidentReason", false, "ACCIDENT_REASON");
        public final static Property AccidentReasonCode = new Property(72, String.class, "accidentReasonCode", false, "ACCIDENT_REASON_CODE");
        public final static Property RoadAccidentCaseLevel = new Property(73, String.class, "roadAccidentCaseLevel", false, "ROAD_ACCIDENT_CASE_LEVEL");
        public final static Property RoadAccidentCaseLevelCode = new Property(74, String.class, "roadAccidentCaseLevelCode", false, "ROAD_ACCIDENT_CASE_LEVEL_CODE");
        public final static Property DutyPercent = new Property(75, String.class, "dutyPercent", false, "DUTY_PERCENT");
        public final static Property FieldType = new Property(76, String.class, "fieldType", false, "FIELD_TYPE");
        public final static Property FieldTypeCode = new Property(77, String.class, "fieldTypeCode", false, "FIELD_TYPE_CODE");
        public final static Property ClaimType = new Property(78, String.class, "claimType", false, "CLAIM_TYPE");
        public final static Property ClaimTypeCode = new Property(79, String.class, "claimTypeCode", false, "CLAIM_TYPE_CODE");
        public final static Property SurveyType = new Property(80, String.class, "surveyType", false, "SURVEY_TYPE");
        public final static Property SurveyTypeCode = new Property(81, String.class, "surveyTypeCode", false, "SURVEY_TYPE_CODE");
        public final static Property SurveyNature = new Property(82, String.class, "surveyNature", false, "SURVEY_NATURE");
        public final static Property SurveyNatureCode = new Property(83, String.class, "surveyNatureCode", false, "SURVEY_NATURE_CODE");
        public final static Property IsCurrentReport = new Property(84, String.class, "isCurrentReport", false, "IS_CURRENT_REPORT");
        public final static Property IsFirstScene = new Property(85, String.class, "isFirstScene", false, "IS_FIRST_SCENE");
        public final static Property IsSingleCarAccident = new Property(86, String.class, "isSingleCarAccident", false, "IS_SINGLE_CAR_ACCIDENT");
        public final static Property EstimateAmount = new Property(87, double.class, "estimateAmount", false, "ESTIMATE_AMOUNT");
        public final static Property EstimateSurveyAmount = new Property(88, double.class, "estimateSurveyAmount", false, "ESTIMATE_SURVEY_AMOUNT");
        public final static Property HugeType = new Property(89, String.class, "hugeType", false, "HUGE_TYPE");
        public final static Property HugeCode = new Property(90, String.class, "hugeCode", false, "HUGE_CODE");
        public final static Property BigCaseFlag = new Property(91, String.class, "bigCaseFlag", false, "BIG_CASE_FLAG");
        public final static Property PaySelfFlag = new Property(92, String.class, "paySelfFlag", false, "PAY_SELF_FLAG");
        public final static Property IsDesignateddriver = new Property(93, String.class, "isDesignateddriver", false, "IS_DESIGNATEDDRIVER");
        public final static Property IsNoFindThird = new Property(94, String.class, "isNoFindThird", false, "IS_NO_FIND_THIRD");
        public final static Property IsSubrogation = new Property(95, String.class, "isSubrogation", false, "IS_SUBROGATION");
        public final static Property SubrogationCaseType = new Property(96, String.class, "subrogationCaseType", false, "SUBROGATION_CASE_TYPE");
        public final static Property SubrogationCaseTypeCode = new Property(97, String.class, "subrogationCaseTypeCode", false, "SUBROGATION_CASE_TYPE_CODE");
        public final static Property SubrogationRequisitionFlag = new Property(98, String.class, "subrogationRequisitionFlag", false, "SUBROGATION_REQUISITION_FLAG");
        public final static Property NoLiabilityCompensation = new Property(99, double.class, "noLiabilityCompensation", false, "NO_LIABILITY_COMPENSATION");
        public final static Property EntrustedClaimFlag = new Property(100, String.class, "entrustedClaimFlag", false, "ENTRUSTED_CLAIM_FLAG");
        public final static Property DutyConfirmationType = new Property(101, String.class, "dutyConfirmationType", false, "DUTY_CONFIRMATION_TYPE");
        public final static Property DutyConfirmationTypeCode = new Property(102, String.class, "dutyConfirmationTypeCode", false, "DUTY_CONFIRMATION_TYPE_CODE");
        public final static Property CarPayFromThird = new Property(103, double.class, "carPayFromThird", false, "CAR_PAY_FROM_THIRD");
        public final static Property SalvageChargesFromThird = new Property(104, double.class, "salvageChargesFromThird", false, "SALVAGE_CHARGES_FROM_THIRD");
        public final static Property HandleOpinion = new Property(105, String.class, "handleOpinion", false, "HANDLE_OPINION");
        public final static Property RoadType = new Property(106, String.class, "roadType", false, "ROAD_TYPE");
        public final static Property RoadTypeCode = new Property(107, String.class, "roadTypeCode", false, "ROAD_TYPE_CODE");
        public final static Property ChannelCode = new Property(108, String.class, "channelCode", false, "CHANNEL_CODE");
        public final static Property ChannelName = new Property(109, String.class, "channelName", false, "CHANNEL_NAME");
        public final static Property DelFlag = new Property(110, String.class, "delFlag", false, "DEL_FLAG");
        public final static Property InjureLossFlag = new Property(111, String.class, "injureLossFlag", false, "INJURE_LOSS_FLAG");
        public final static Property InjureNum = new Property(112, String.class, "injureNum", false, "INJURE_NUM");
        public final static Property CarLossFlag = new Property(113, String.class, "carLossFlag", false, "CAR_LOSS_FLAG");
        public final static Property ThiefLossFlag = new Property(114, String.class, "thiefLossFlag", false, "THIEF_LOSS_FLAG");
        public final static Property CargoLossFlag = new Property(115, String.class, "cargoLossFlag", false, "CARGO_LOSS_FLAG");
        public final static Property SurveyTimes = new Property(116, String.class, "surveyTimes", false, "SURVEY_TIMES");
        public final static Property CheckOpinion = new Property(117, String.class, "checkOpinion", false, "CHECK_OPINION");
        public final static Property CheckConclusion = new Property(118, String.class, "checkConclusion", false, "CHECK_CONCLUSION");
        public final static Property CheckPersonCode = new Property(119, String.class, "checkPersonCode", false, "CHECK_PERSON_CODE");
        public final static Property CheckPersonName = new Property(120, String.class, "checkPersonName", false, "CHECK_PERSON_NAME");
        public final static Property CheckCompanyCode = new Property(121, String.class, "checkCompanyCode", false, "CHECK_COMPANY_CODE");
        public final static Property CheckCompanyName = new Property(122, String.class, "checkCompanyName", false, "CHECK_COMPANY_NAME");
        public final static Property CheckTime = new Property(123, String.class, "checkTime", false, "CHECK_TIME");
    }


    public SurveyMainInfoDao(DaoConfig config) {
        super(config);
    }
    
    public SurveyMainInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SURVEY_MAIN_INFO\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"REPORT_NO\" TEXT," + // 1: reportNo
                "\"TASK_NO\" TEXT," + // 2: taskNo
                "\"EVAL_ID\" TEXT," + // 3: evalId
                "\"FORCE_POLICY_CODE\" TEXT," + // 4: forcePolicyCode
                "\"BUSINESS_POLICY_NO\" TEXT," + // 5: businessPolicyNo
                "\"REPORT_TYPE\" TEXT," + // 6: reportType
                "\"REPORT_TYPE_CODE\" TEXT," + // 7: reportTypeCode
                "\"REPORT_TIME\" TEXT," + // 8: reportTime
                "\"REPORT_PERSON_NAME\" TEXT," + // 9: reportPersonName
                "\"REPORT_PERSON_CONTACT\" TEXT," + // 10: reportPersonContact
                "\"REPORT_PHONE\" TEXT," + // 11: reportPhone
                "\"INSURED_PERSON_NAME\" TEXT," + // 12: insuredPersonName
                "\"INSURED_PERSON_CODE\" TEXT," + // 13: insuredPersonCode
                "\"INSURE_COMPANY_CODE\" TEXT," + // 14: insureCompanyCode
                "\"INSURE_COMPANY_NAME\" TEXT," + // 15: insureCompanyName
                "\"INSURE_VEHICLE_CODE\" TEXT," + // 16: insureVehicleCode
                "\"INSURE_VEHICLE_NAME\" TEXT," + // 17: insureVehicleName
                "\"COMPANY_CODE\" TEXT," + // 18: companyCode
                "\"COMPANY_NAME\" TEXT," + // 19: companyName
                "\"BRANCH_COMPANY_CODE\" TEXT," + // 20: branchCompanyCode
                "\"BRANCH_COMPANY_NAME\" TEXT," + // 21: branchCompanyName
                "\"PLATE_NO\" TEXT," + // 22: plateNo
                "\"VEHICLE_TYPE\" TEXT," + // 23: vehicleType
                "\"VEHICLE_TYPE_CODE\" TEXT," + // 24: vehicleTypeCode
                "\"VEHICLE_MODEL\" TEXT," + // 25: vehicleModel
                "\"ENGINE_MODEL\" TEXT," + // 26: engineModel
                "\"DRIVER_NO\" TEXT," + // 27: driverNo
                "\"DRIVER_TYPE\" TEXT," + // 28: driverType
                "\"DRIVER_TYPE_CODE\" TEXT," + // 29: driverTypeCode
                "\"VIN\" TEXT," + // 30: vin
                "\"ACCIDENT_FREQUENCY\" TEXT," + // 31: accidentFrequency
                "\"ACCIDENT_TIME\" TEXT," + // 32: accidentTime
                "\"ACCIDENT_PLACE\" TEXT," + // 33: accidentPlace
                "\"ACCIDENT_DESCRIPTION\" TEXT," + // 34: accidentDescription
                "\"ACCIDENT_CAUSE\" TEXT," + // 35: accidentCause
                "\"ACCIDENT_CAUSE_CODE\" TEXT," + // 36: accidentCauseCode
                "\"DRIVER_NAME\" TEXT," + // 37: driverName
                "\"DRIVER_LICENSE_TYPE\" TEXT," + // 38: driverLicenseType
                "\"DRIVER_LICENSE_TYPE_CODE\" TEXT," + // 39: driverLicenseTypeCode
                "\"DRIVER_LICENSE_NO\" TEXT," + // 40: driverLicenseNo
                "\"DRIVER_CONTACT\" TEXT," + // 41: driverContact
                "\"ACCIDENT_DRIVER_TYPE\" TEXT," + // 42: accidentDriverType
                "\"ACCIDENT_AREA\" TEXT," + // 43: accidentArea
                "\"ACCIDENT_AREA_CODE\" TEXT," + // 44: accidentAreaCode
                "\"ACCIDENT_PROVINCE\" TEXT," + // 45: accidentProvince
                "\"ACCIDENT_CITY\" TEXT," + // 46: accidentCity
                "\"ACCIDENT_PLACE_STREET\" TEXT," + // 47: accidentPlaceStreet
                "\"ACCIDENT_PLACE_ZIP_CODE\" TEXT," + // 48: accidentPlaceZipCode
                "\"ACCIDENT_WEATHER\" TEXT," + // 49: accidentWeather
                "\"LONGITUDE\" TEXT," + // 50: longitude
                "\"LATITUDE\" TEXT," + // 51: latitude
                "\"SURVEY_START_TIME\" TEXT," + // 52: surveyStartTime
                "\"SURVEY_END_TIME\" TEXT," + // 53: surveyEndTime
                "\"SURVEY_TIME\" TEXT," + // 54: surveyTime
                "\"SURVEY_PLACE\" TEXT," + // 55: surveyPlace
                "\"SURVEY_DES\" TEXT," + // 56: surveyDes
                "\"SURVEY_NAME\" TEXT," + // 57: surveyName
                "\"SURVEY_CODE\" TEXT," + // 58: surveyCode
                "\"SURVEY_NAME2\" TEXT," + // 59: surveyName2
                "\"SURVEY_CODE2\" TEXT," + // 60: surveyCode2
                "\"SURVEY_CERIT_CODE\" TEXT," + // 61: surveyCeritCode
                "\"SURVEY_CERIT_CODE2\" TEXT," + // 62: surveyCeritCode2
                "\"SURVEY_COMPANY_CODE\" TEXT," + // 63: surveyCompanyCode
                "\"SURVEY_COMPANY_NAME\" TEXT," + // 64: surveyCompanyName
                "\"ACCIDENT_TYPE\" TEXT," + // 65: accidentType
                "\"ACCIDENT_TYPE_CODE\" TEXT," + // 66: accidentTypeCode
                "\"MANAGE_TYPE\" TEXT," + // 67: manageType
                "\"MANAGE_TYPE_CODE\" TEXT," + // 68: manageTypeCode
                "\"ACCIDENT_DUTY\" TEXT," + // 69: accidentDuty
                "\"ACCIDENT_DUTY_CODE\" TEXT," + // 70: accidentDutyCode
                "\"ACCIDENT_REASON\" TEXT," + // 71: accidentReason
                "\"ACCIDENT_REASON_CODE\" TEXT," + // 72: accidentReasonCode
                "\"ROAD_ACCIDENT_CASE_LEVEL\" TEXT," + // 73: roadAccidentCaseLevel
                "\"ROAD_ACCIDENT_CASE_LEVEL_CODE\" TEXT," + // 74: roadAccidentCaseLevelCode
                "\"DUTY_PERCENT\" TEXT," + // 75: dutyPercent
                "\"FIELD_TYPE\" TEXT," + // 76: fieldType
                "\"FIELD_TYPE_CODE\" TEXT," + // 77: fieldTypeCode
                "\"CLAIM_TYPE\" TEXT," + // 78: claimType
                "\"CLAIM_TYPE_CODE\" TEXT," + // 79: claimTypeCode
                "\"SURVEY_TYPE\" TEXT," + // 80: surveyType
                "\"SURVEY_TYPE_CODE\" TEXT," + // 81: surveyTypeCode
                "\"SURVEY_NATURE\" TEXT," + // 82: surveyNature
                "\"SURVEY_NATURE_CODE\" TEXT," + // 83: surveyNatureCode
                "\"IS_CURRENT_REPORT\" TEXT," + // 84: isCurrentReport
                "\"IS_FIRST_SCENE\" TEXT," + // 85: isFirstScene
                "\"IS_SINGLE_CAR_ACCIDENT\" TEXT," + // 86: isSingleCarAccident
                "\"ESTIMATE_AMOUNT\" REAL NOT NULL ," + // 87: estimateAmount
                "\"ESTIMATE_SURVEY_AMOUNT\" REAL NOT NULL ," + // 88: estimateSurveyAmount
                "\"HUGE_TYPE\" TEXT," + // 89: hugeType
                "\"HUGE_CODE\" TEXT," + // 90: hugeCode
                "\"BIG_CASE_FLAG\" TEXT," + // 91: bigCaseFlag
                "\"PAY_SELF_FLAG\" TEXT," + // 92: paySelfFlag
                "\"IS_DESIGNATEDDRIVER\" TEXT," + // 93: isDesignateddriver
                "\"IS_NO_FIND_THIRD\" TEXT," + // 94: isNoFindThird
                "\"IS_SUBROGATION\" TEXT," + // 95: isSubrogation
                "\"SUBROGATION_CASE_TYPE\" TEXT," + // 96: subrogationCaseType
                "\"SUBROGATION_CASE_TYPE_CODE\" TEXT," + // 97: subrogationCaseTypeCode
                "\"SUBROGATION_REQUISITION_FLAG\" TEXT," + // 98: subrogationRequisitionFlag
                "\"NO_LIABILITY_COMPENSATION\" REAL NOT NULL ," + // 99: noLiabilityCompensation
                "\"ENTRUSTED_CLAIM_FLAG\" TEXT," + // 100: entrustedClaimFlag
                "\"DUTY_CONFIRMATION_TYPE\" TEXT," + // 101: dutyConfirmationType
                "\"DUTY_CONFIRMATION_TYPE_CODE\" TEXT," + // 102: dutyConfirmationTypeCode
                "\"CAR_PAY_FROM_THIRD\" REAL NOT NULL ," + // 103: carPayFromThird
                "\"SALVAGE_CHARGES_FROM_THIRD\" REAL NOT NULL ," + // 104: salvageChargesFromThird
                "\"HANDLE_OPINION\" TEXT," + // 105: handleOpinion
                "\"ROAD_TYPE\" TEXT," + // 106: roadType
                "\"ROAD_TYPE_CODE\" TEXT," + // 107: roadTypeCode
                "\"CHANNEL_CODE\" TEXT," + // 108: channelCode
                "\"CHANNEL_NAME\" TEXT," + // 109: channelName
                "\"DEL_FLAG\" TEXT," + // 110: delFlag
                "\"INJURE_LOSS_FLAG\" TEXT," + // 111: injureLossFlag
                "\"INJURE_NUM\" TEXT," + // 112: injureNum
                "\"CAR_LOSS_FLAG\" TEXT," + // 113: carLossFlag
                "\"THIEF_LOSS_FLAG\" TEXT," + // 114: thiefLossFlag
                "\"CARGO_LOSS_FLAG\" TEXT," + // 115: cargoLossFlag
                "\"SURVEY_TIMES\" TEXT," + // 116: surveyTimes
                "\"CHECK_OPINION\" TEXT," + // 117: checkOpinion
                "\"CHECK_CONCLUSION\" TEXT," + // 118: checkConclusion
                "\"CHECK_PERSON_CODE\" TEXT," + // 119: checkPersonCode
                "\"CHECK_PERSON_NAME\" TEXT," + // 120: checkPersonName
                "\"CHECK_COMPANY_CODE\" TEXT," + // 121: checkCompanyCode
                "\"CHECK_COMPANY_NAME\" TEXT," + // 122: checkCompanyName
                "\"CHECK_TIME\" TEXT);"); // 123: checkTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SURVEY_MAIN_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, SurveyMainInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String reportNo = entity.getReportNo();
        if (reportNo != null) {
            stmt.bindString(2, reportNo);
        }
 
        String taskNo = entity.getTaskNo();
        if (taskNo != null) {
            stmt.bindString(3, taskNo);
        }
 
        String evalId = entity.getEvalId();
        if (evalId != null) {
            stmt.bindString(4, evalId);
        }
 
        String forcePolicyCode = entity.getForcePolicyCode();
        if (forcePolicyCode != null) {
            stmt.bindString(5, forcePolicyCode);
        }
 
        String businessPolicyNo = entity.getBusinessPolicyNo();
        if (businessPolicyNo != null) {
            stmt.bindString(6, businessPolicyNo);
        }
 
        String reportType = entity.getReportType();
        if (reportType != null) {
            stmt.bindString(7, reportType);
        }
 
        String reportTypeCode = entity.getReportTypeCode();
        if (reportTypeCode != null) {
            stmt.bindString(8, reportTypeCode);
        }
 
        String reportTime = entity.getReportTime();
        if (reportTime != null) {
            stmt.bindString(9, reportTime);
        }
 
        String reportPersonName = entity.getReportPersonName();
        if (reportPersonName != null) {
            stmt.bindString(10, reportPersonName);
        }
 
        String reportPersonContact = entity.getReportPersonContact();
        if (reportPersonContact != null) {
            stmt.bindString(11, reportPersonContact);
        }
 
        String reportPhone = entity.getReportPhone();
        if (reportPhone != null) {
            stmt.bindString(12, reportPhone);
        }
 
        String insuredPersonName = entity.getInsuredPersonName();
        if (insuredPersonName != null) {
            stmt.bindString(13, insuredPersonName);
        }
 
        String insuredPersonCode = entity.getInsuredPersonCode();
        if (insuredPersonCode != null) {
            stmt.bindString(14, insuredPersonCode);
        }
 
        String insureCompanyCode = entity.getInsureCompanyCode();
        if (insureCompanyCode != null) {
            stmt.bindString(15, insureCompanyCode);
        }
 
        String insureCompanyName = entity.getInsureCompanyName();
        if (insureCompanyName != null) {
            stmt.bindString(16, insureCompanyName);
        }
 
        String insureVehicleCode = entity.getInsureVehicleCode();
        if (insureVehicleCode != null) {
            stmt.bindString(17, insureVehicleCode);
        }
 
        String insureVehicleName = entity.getInsureVehicleName();
        if (insureVehicleName != null) {
            stmt.bindString(18, insureVehicleName);
        }
 
        String companyCode = entity.getCompanyCode();
        if (companyCode != null) {
            stmt.bindString(19, companyCode);
        }
 
        String companyName = entity.getCompanyName();
        if (companyName != null) {
            stmt.bindString(20, companyName);
        }
 
        String branchCompanyCode = entity.getBranchCompanyCode();
        if (branchCompanyCode != null) {
            stmt.bindString(21, branchCompanyCode);
        }
 
        String branchCompanyName = entity.getBranchCompanyName();
        if (branchCompanyName != null) {
            stmt.bindString(22, branchCompanyName);
        }
 
        String plateNo = entity.getPlateNo();
        if (plateNo != null) {
            stmt.bindString(23, plateNo);
        }
 
        String vehicleType = entity.getVehicleType();
        if (vehicleType != null) {
            stmt.bindString(24, vehicleType);
        }
 
        String vehicleTypeCode = entity.getVehicleTypeCode();
        if (vehicleTypeCode != null) {
            stmt.bindString(25, vehicleTypeCode);
        }
 
        String vehicleModel = entity.getVehicleModel();
        if (vehicleModel != null) {
            stmt.bindString(26, vehicleModel);
        }
 
        String engineModel = entity.getEngineModel();
        if (engineModel != null) {
            stmt.bindString(27, engineModel);
        }
 
        String driverNo = entity.getDriverNo();
        if (driverNo != null) {
            stmt.bindString(28, driverNo);
        }
 
        String driverType = entity.getDriverType();
        if (driverType != null) {
            stmt.bindString(29, driverType);
        }
 
        String driverTypeCode = entity.getDriverTypeCode();
        if (driverTypeCode != null) {
            stmt.bindString(30, driverTypeCode);
        }
 
        String vin = entity.getVin();
        if (vin != null) {
            stmt.bindString(31, vin);
        }
 
        String accidentFrequency = entity.getAccidentFrequency();
        if (accidentFrequency != null) {
            stmt.bindString(32, accidentFrequency);
        }
 
        String accidentTime = entity.getAccidentTime();
        if (accidentTime != null) {
            stmt.bindString(33, accidentTime);
        }
 
        String accidentPlace = entity.getAccidentPlace();
        if (accidentPlace != null) {
            stmt.bindString(34, accidentPlace);
        }
 
        String accidentDescription = entity.getAccidentDescription();
        if (accidentDescription != null) {
            stmt.bindString(35, accidentDescription);
        }
 
        String accidentCause = entity.getAccidentCause();
        if (accidentCause != null) {
            stmt.bindString(36, accidentCause);
        }
 
        String accidentCauseCode = entity.getAccidentCauseCode();
        if (accidentCauseCode != null) {
            stmt.bindString(37, accidentCauseCode);
        }
 
        String driverName = entity.getDriverName();
        if (driverName != null) {
            stmt.bindString(38, driverName);
        }
 
        String driverLicenseType = entity.getDriverLicenseType();
        if (driverLicenseType != null) {
            stmt.bindString(39, driverLicenseType);
        }
 
        String driverLicenseTypeCode = entity.getDriverLicenseTypeCode();
        if (driverLicenseTypeCode != null) {
            stmt.bindString(40, driverLicenseTypeCode);
        }
 
        String driverLicenseNo = entity.getDriverLicenseNo();
        if (driverLicenseNo != null) {
            stmt.bindString(41, driverLicenseNo);
        }
 
        String driverContact = entity.getDriverContact();
        if (driverContact != null) {
            stmt.bindString(42, driverContact);
        }
 
        String accidentDriverType = entity.getAccidentDriverType();
        if (accidentDriverType != null) {
            stmt.bindString(43, accidentDriverType);
        }
 
        String accidentArea = entity.getAccidentArea();
        if (accidentArea != null) {
            stmt.bindString(44, accidentArea);
        }
 
        String accidentAreaCode = entity.getAccidentAreaCode();
        if (accidentAreaCode != null) {
            stmt.bindString(45, accidentAreaCode);
        }
 
        String accidentProvince = entity.getAccidentProvince();
        if (accidentProvince != null) {
            stmt.bindString(46, accidentProvince);
        }
 
        String accidentCity = entity.getAccidentCity();
        if (accidentCity != null) {
            stmt.bindString(47, accidentCity);
        }
 
        String accidentPlaceStreet = entity.getAccidentPlaceStreet();
        if (accidentPlaceStreet != null) {
            stmt.bindString(48, accidentPlaceStreet);
        }
 
        String accidentPlaceZipCode = entity.getAccidentPlaceZipCode();
        if (accidentPlaceZipCode != null) {
            stmt.bindString(49, accidentPlaceZipCode);
        }
 
        String accidentWeather = entity.getAccidentWeather();
        if (accidentWeather != null) {
            stmt.bindString(50, accidentWeather);
        }
 
        String longitude = entity.getLongitude();
        if (longitude != null) {
            stmt.bindString(51, longitude);
        }
 
        String latitude = entity.getLatitude();
        if (latitude != null) {
            stmt.bindString(52, latitude);
        }
 
        String surveyStartTime = entity.getSurveyStartTime();
        if (surveyStartTime != null) {
            stmt.bindString(53, surveyStartTime);
        }
 
        String surveyEndTime = entity.getSurveyEndTime();
        if (surveyEndTime != null) {
            stmt.bindString(54, surveyEndTime);
        }
 
        String surveyTime = entity.getSurveyTime();
        if (surveyTime != null) {
            stmt.bindString(55, surveyTime);
        }
 
        String surveyPlace = entity.getSurveyPlace();
        if (surveyPlace != null) {
            stmt.bindString(56, surveyPlace);
        }
 
        String surveyDes = entity.getSurveyDes();
        if (surveyDes != null) {
            stmt.bindString(57, surveyDes);
        }
 
        String surveyName = entity.getSurveyName();
        if (surveyName != null) {
            stmt.bindString(58, surveyName);
        }
 
        String surveyCode = entity.getSurveyCode();
        if (surveyCode != null) {
            stmt.bindString(59, surveyCode);
        }
 
        String surveyName2 = entity.getSurveyName2();
        if (surveyName2 != null) {
            stmt.bindString(60, surveyName2);
        }
 
        String surveyCode2 = entity.getSurveyCode2();
        if (surveyCode2 != null) {
            stmt.bindString(61, surveyCode2);
        }
 
        String surveyCeritCode = entity.getSurveyCeritCode();
        if (surveyCeritCode != null) {
            stmt.bindString(62, surveyCeritCode);
        }
 
        String surveyCeritCode2 = entity.getSurveyCeritCode2();
        if (surveyCeritCode2 != null) {
            stmt.bindString(63, surveyCeritCode2);
        }
 
        String surveyCompanyCode = entity.getSurveyCompanyCode();
        if (surveyCompanyCode != null) {
            stmt.bindString(64, surveyCompanyCode);
        }
 
        String surveyCompanyName = entity.getSurveyCompanyName();
        if (surveyCompanyName != null) {
            stmt.bindString(65, surveyCompanyName);
        }
 
        String accidentType = entity.getAccidentType();
        if (accidentType != null) {
            stmt.bindString(66, accidentType);
        }
 
        String accidentTypeCode = entity.getAccidentTypeCode();
        if (accidentTypeCode != null) {
            stmt.bindString(67, accidentTypeCode);
        }
 
        String manageType = entity.getManageType();
        if (manageType != null) {
            stmt.bindString(68, manageType);
        }
 
        String manageTypeCode = entity.getManageTypeCode();
        if (manageTypeCode != null) {
            stmt.bindString(69, manageTypeCode);
        }
 
        String accidentDuty = entity.getAccidentDuty();
        if (accidentDuty != null) {
            stmt.bindString(70, accidentDuty);
        }
 
        String accidentDutyCode = entity.getAccidentDutyCode();
        if (accidentDutyCode != null) {
            stmt.bindString(71, accidentDutyCode);
        }
 
        String accidentReason = entity.getAccidentReason();
        if (accidentReason != null) {
            stmt.bindString(72, accidentReason);
        }
 
        String accidentReasonCode = entity.getAccidentReasonCode();
        if (accidentReasonCode != null) {
            stmt.bindString(73, accidentReasonCode);
        }
 
        String roadAccidentCaseLevel = entity.getRoadAccidentCaseLevel();
        if (roadAccidentCaseLevel != null) {
            stmt.bindString(74, roadAccidentCaseLevel);
        }
 
        String roadAccidentCaseLevelCode = entity.getRoadAccidentCaseLevelCode();
        if (roadAccidentCaseLevelCode != null) {
            stmt.bindString(75, roadAccidentCaseLevelCode);
        }
 
        String dutyPercent = entity.getDutyPercent();
        if (dutyPercent != null) {
            stmt.bindString(76, dutyPercent);
        }
 
        String fieldType = entity.getFieldType();
        if (fieldType != null) {
            stmt.bindString(77, fieldType);
        }
 
        String fieldTypeCode = entity.getFieldTypeCode();
        if (fieldTypeCode != null) {
            stmt.bindString(78, fieldTypeCode);
        }
 
        String claimType = entity.getClaimType();
        if (claimType != null) {
            stmt.bindString(79, claimType);
        }
 
        String claimTypeCode = entity.getClaimTypeCode();
        if (claimTypeCode != null) {
            stmt.bindString(80, claimTypeCode);
        }
 
        String surveyType = entity.getSurveyType();
        if (surveyType != null) {
            stmt.bindString(81, surveyType);
        }
 
        String surveyTypeCode = entity.getSurveyTypeCode();
        if (surveyTypeCode != null) {
            stmt.bindString(82, surveyTypeCode);
        }
 
        String surveyNature = entity.getSurveyNature();
        if (surveyNature != null) {
            stmt.bindString(83, surveyNature);
        }
 
        String surveyNatureCode = entity.getSurveyNatureCode();
        if (surveyNatureCode != null) {
            stmt.bindString(84, surveyNatureCode);
        }
 
        String isCurrentReport = entity.getIsCurrentReport();
        if (isCurrentReport != null) {
            stmt.bindString(85, isCurrentReport);
        }
 
        String isFirstScene = entity.getIsFirstScene();
        if (isFirstScene != null) {
            stmt.bindString(86, isFirstScene);
        }
 
        String isSingleCarAccident = entity.getIsSingleCarAccident();
        if (isSingleCarAccident != null) {
            stmt.bindString(87, isSingleCarAccident);
        }
        stmt.bindDouble(88, entity.getEstimateAmount());
        stmt.bindDouble(89, entity.getEstimateSurveyAmount());
 
        String hugeType = entity.getHugeType();
        if (hugeType != null) {
            stmt.bindString(90, hugeType);
        }
 
        String hugeCode = entity.getHugeCode();
        if (hugeCode != null) {
            stmt.bindString(91, hugeCode);
        }
 
        String bigCaseFlag = entity.getBigCaseFlag();
        if (bigCaseFlag != null) {
            stmt.bindString(92, bigCaseFlag);
        }
 
        String paySelfFlag = entity.getPaySelfFlag();
        if (paySelfFlag != null) {
            stmt.bindString(93, paySelfFlag);
        }
 
        String isDesignateddriver = entity.getIsDesignateddriver();
        if (isDesignateddriver != null) {
            stmt.bindString(94, isDesignateddriver);
        }
 
        String isNoFindThird = entity.getIsNoFindThird();
        if (isNoFindThird != null) {
            stmt.bindString(95, isNoFindThird);
        }
 
        String isSubrogation = entity.getIsSubrogation();
        if (isSubrogation != null) {
            stmt.bindString(96, isSubrogation);
        }
 
        String subrogationCaseType = entity.getSubrogationCaseType();
        if (subrogationCaseType != null) {
            stmt.bindString(97, subrogationCaseType);
        }
 
        String subrogationCaseTypeCode = entity.getSubrogationCaseTypeCode();
        if (subrogationCaseTypeCode != null) {
            stmt.bindString(98, subrogationCaseTypeCode);
        }
 
        String subrogationRequisitionFlag = entity.getSubrogationRequisitionFlag();
        if (subrogationRequisitionFlag != null) {
            stmt.bindString(99, subrogationRequisitionFlag);
        }
        stmt.bindDouble(100, entity.getNoLiabilityCompensation());
 
        String entrustedClaimFlag = entity.getEntrustedClaimFlag();
        if (entrustedClaimFlag != null) {
            stmt.bindString(101, entrustedClaimFlag);
        }
 
        String dutyConfirmationType = entity.getDutyConfirmationType();
        if (dutyConfirmationType != null) {
            stmt.bindString(102, dutyConfirmationType);
        }
 
        String dutyConfirmationTypeCode = entity.getDutyConfirmationTypeCode();
        if (dutyConfirmationTypeCode != null) {
            stmt.bindString(103, dutyConfirmationTypeCode);
        }
        stmt.bindDouble(104, entity.getCarPayFromThird());
        stmt.bindDouble(105, entity.getSalvageChargesFromThird());
 
        String handleOpinion = entity.getHandleOpinion();
        if (handleOpinion != null) {
            stmt.bindString(106, handleOpinion);
        }
 
        String roadType = entity.getRoadType();
        if (roadType != null) {
            stmt.bindString(107, roadType);
        }
 
        String roadTypeCode = entity.getRoadTypeCode();
        if (roadTypeCode != null) {
            stmt.bindString(108, roadTypeCode);
        }
 
        String channelCode = entity.getChannelCode();
        if (channelCode != null) {
            stmt.bindString(109, channelCode);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(110, channelName);
        }
 
        String delFlag = entity.getDelFlag();
        if (delFlag != null) {
            stmt.bindString(111, delFlag);
        }
 
        String injureLossFlag = entity.getInjureLossFlag();
        if (injureLossFlag != null) {
            stmt.bindString(112, injureLossFlag);
        }
 
        String injureNum = entity.getInjureNum();
        if (injureNum != null) {
            stmt.bindString(113, injureNum);
        }
 
        String carLossFlag = entity.getCarLossFlag();
        if (carLossFlag != null) {
            stmt.bindString(114, carLossFlag);
        }
 
        String thiefLossFlag = entity.getThiefLossFlag();
        if (thiefLossFlag != null) {
            stmt.bindString(115, thiefLossFlag);
        }
 
        String cargoLossFlag = entity.getCargoLossFlag();
        if (cargoLossFlag != null) {
            stmt.bindString(116, cargoLossFlag);
        }
 
        String surveyTimes = entity.getSurveyTimes();
        if (surveyTimes != null) {
            stmt.bindString(117, surveyTimes);
        }
 
        String checkOpinion = entity.getCheckOpinion();
        if (checkOpinion != null) {
            stmt.bindString(118, checkOpinion);
        }
 
        String checkConclusion = entity.getCheckConclusion();
        if (checkConclusion != null) {
            stmt.bindString(119, checkConclusion);
        }
 
        String checkPersonCode = entity.getCheckPersonCode();
        if (checkPersonCode != null) {
            stmt.bindString(120, checkPersonCode);
        }
 
        String checkPersonName = entity.getCheckPersonName();
        if (checkPersonName != null) {
            stmt.bindString(121, checkPersonName);
        }
 
        String checkCompanyCode = entity.getCheckCompanyCode();
        if (checkCompanyCode != null) {
            stmt.bindString(122, checkCompanyCode);
        }
 
        String checkCompanyName = entity.getCheckCompanyName();
        if (checkCompanyName != null) {
            stmt.bindString(123, checkCompanyName);
        }
 
        String checkTime = entity.getCheckTime();
        if (checkTime != null) {
            stmt.bindString(124, checkTime);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, SurveyMainInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String reportNo = entity.getReportNo();
        if (reportNo != null) {
            stmt.bindString(2, reportNo);
        }
 
        String taskNo = entity.getTaskNo();
        if (taskNo != null) {
            stmt.bindString(3, taskNo);
        }
 
        String evalId = entity.getEvalId();
        if (evalId != null) {
            stmt.bindString(4, evalId);
        }
 
        String forcePolicyCode = entity.getForcePolicyCode();
        if (forcePolicyCode != null) {
            stmt.bindString(5, forcePolicyCode);
        }
 
        String businessPolicyNo = entity.getBusinessPolicyNo();
        if (businessPolicyNo != null) {
            stmt.bindString(6, businessPolicyNo);
        }
 
        String reportType = entity.getReportType();
        if (reportType != null) {
            stmt.bindString(7, reportType);
        }
 
        String reportTypeCode = entity.getReportTypeCode();
        if (reportTypeCode != null) {
            stmt.bindString(8, reportTypeCode);
        }
 
        String reportTime = entity.getReportTime();
        if (reportTime != null) {
            stmt.bindString(9, reportTime);
        }
 
        String reportPersonName = entity.getReportPersonName();
        if (reportPersonName != null) {
            stmt.bindString(10, reportPersonName);
        }
 
        String reportPersonContact = entity.getReportPersonContact();
        if (reportPersonContact != null) {
            stmt.bindString(11, reportPersonContact);
        }
 
        String reportPhone = entity.getReportPhone();
        if (reportPhone != null) {
            stmt.bindString(12, reportPhone);
        }
 
        String insuredPersonName = entity.getInsuredPersonName();
        if (insuredPersonName != null) {
            stmt.bindString(13, insuredPersonName);
        }
 
        String insuredPersonCode = entity.getInsuredPersonCode();
        if (insuredPersonCode != null) {
            stmt.bindString(14, insuredPersonCode);
        }
 
        String insureCompanyCode = entity.getInsureCompanyCode();
        if (insureCompanyCode != null) {
            stmt.bindString(15, insureCompanyCode);
        }
 
        String insureCompanyName = entity.getInsureCompanyName();
        if (insureCompanyName != null) {
            stmt.bindString(16, insureCompanyName);
        }
 
        String insureVehicleCode = entity.getInsureVehicleCode();
        if (insureVehicleCode != null) {
            stmt.bindString(17, insureVehicleCode);
        }
 
        String insureVehicleName = entity.getInsureVehicleName();
        if (insureVehicleName != null) {
            stmt.bindString(18, insureVehicleName);
        }
 
        String companyCode = entity.getCompanyCode();
        if (companyCode != null) {
            stmt.bindString(19, companyCode);
        }
 
        String companyName = entity.getCompanyName();
        if (companyName != null) {
            stmt.bindString(20, companyName);
        }
 
        String branchCompanyCode = entity.getBranchCompanyCode();
        if (branchCompanyCode != null) {
            stmt.bindString(21, branchCompanyCode);
        }
 
        String branchCompanyName = entity.getBranchCompanyName();
        if (branchCompanyName != null) {
            stmt.bindString(22, branchCompanyName);
        }
 
        String plateNo = entity.getPlateNo();
        if (plateNo != null) {
            stmt.bindString(23, plateNo);
        }
 
        String vehicleType = entity.getVehicleType();
        if (vehicleType != null) {
            stmt.bindString(24, vehicleType);
        }
 
        String vehicleTypeCode = entity.getVehicleTypeCode();
        if (vehicleTypeCode != null) {
            stmt.bindString(25, vehicleTypeCode);
        }
 
        String vehicleModel = entity.getVehicleModel();
        if (vehicleModel != null) {
            stmt.bindString(26, vehicleModel);
        }
 
        String engineModel = entity.getEngineModel();
        if (engineModel != null) {
            stmt.bindString(27, engineModel);
        }
 
        String driverNo = entity.getDriverNo();
        if (driverNo != null) {
            stmt.bindString(28, driverNo);
        }
 
        String driverType = entity.getDriverType();
        if (driverType != null) {
            stmt.bindString(29, driverType);
        }
 
        String driverTypeCode = entity.getDriverTypeCode();
        if (driverTypeCode != null) {
            stmt.bindString(30, driverTypeCode);
        }
 
        String vin = entity.getVin();
        if (vin != null) {
            stmt.bindString(31, vin);
        }
 
        String accidentFrequency = entity.getAccidentFrequency();
        if (accidentFrequency != null) {
            stmt.bindString(32, accidentFrequency);
        }
 
        String accidentTime = entity.getAccidentTime();
        if (accidentTime != null) {
            stmt.bindString(33, accidentTime);
        }
 
        String accidentPlace = entity.getAccidentPlace();
        if (accidentPlace != null) {
            stmt.bindString(34, accidentPlace);
        }
 
        String accidentDescription = entity.getAccidentDescription();
        if (accidentDescription != null) {
            stmt.bindString(35, accidentDescription);
        }
 
        String accidentCause = entity.getAccidentCause();
        if (accidentCause != null) {
            stmt.bindString(36, accidentCause);
        }
 
        String accidentCauseCode = entity.getAccidentCauseCode();
        if (accidentCauseCode != null) {
            stmt.bindString(37, accidentCauseCode);
        }
 
        String driverName = entity.getDriverName();
        if (driverName != null) {
            stmt.bindString(38, driverName);
        }
 
        String driverLicenseType = entity.getDriverLicenseType();
        if (driverLicenseType != null) {
            stmt.bindString(39, driverLicenseType);
        }
 
        String driverLicenseTypeCode = entity.getDriverLicenseTypeCode();
        if (driverLicenseTypeCode != null) {
            stmt.bindString(40, driverLicenseTypeCode);
        }
 
        String driverLicenseNo = entity.getDriverLicenseNo();
        if (driverLicenseNo != null) {
            stmt.bindString(41, driverLicenseNo);
        }
 
        String driverContact = entity.getDriverContact();
        if (driverContact != null) {
            stmt.bindString(42, driverContact);
        }
 
        String accidentDriverType = entity.getAccidentDriverType();
        if (accidentDriverType != null) {
            stmt.bindString(43, accidentDriverType);
        }
 
        String accidentArea = entity.getAccidentArea();
        if (accidentArea != null) {
            stmt.bindString(44, accidentArea);
        }
 
        String accidentAreaCode = entity.getAccidentAreaCode();
        if (accidentAreaCode != null) {
            stmt.bindString(45, accidentAreaCode);
        }
 
        String accidentProvince = entity.getAccidentProvince();
        if (accidentProvince != null) {
            stmt.bindString(46, accidentProvince);
        }
 
        String accidentCity = entity.getAccidentCity();
        if (accidentCity != null) {
            stmt.bindString(47, accidentCity);
        }
 
        String accidentPlaceStreet = entity.getAccidentPlaceStreet();
        if (accidentPlaceStreet != null) {
            stmt.bindString(48, accidentPlaceStreet);
        }
 
        String accidentPlaceZipCode = entity.getAccidentPlaceZipCode();
        if (accidentPlaceZipCode != null) {
            stmt.bindString(49, accidentPlaceZipCode);
        }
 
        String accidentWeather = entity.getAccidentWeather();
        if (accidentWeather != null) {
            stmt.bindString(50, accidentWeather);
        }
 
        String longitude = entity.getLongitude();
        if (longitude != null) {
            stmt.bindString(51, longitude);
        }
 
        String latitude = entity.getLatitude();
        if (latitude != null) {
            stmt.bindString(52, latitude);
        }
 
        String surveyStartTime = entity.getSurveyStartTime();
        if (surveyStartTime != null) {
            stmt.bindString(53, surveyStartTime);
        }
 
        String surveyEndTime = entity.getSurveyEndTime();
        if (surveyEndTime != null) {
            stmt.bindString(54, surveyEndTime);
        }
 
        String surveyTime = entity.getSurveyTime();
        if (surveyTime != null) {
            stmt.bindString(55, surveyTime);
        }
 
        String surveyPlace = entity.getSurveyPlace();
        if (surveyPlace != null) {
            stmt.bindString(56, surveyPlace);
        }
 
        String surveyDes = entity.getSurveyDes();
        if (surveyDes != null) {
            stmt.bindString(57, surveyDes);
        }
 
        String surveyName = entity.getSurveyName();
        if (surveyName != null) {
            stmt.bindString(58, surveyName);
        }
 
        String surveyCode = entity.getSurveyCode();
        if (surveyCode != null) {
            stmt.bindString(59, surveyCode);
        }
 
        String surveyName2 = entity.getSurveyName2();
        if (surveyName2 != null) {
            stmt.bindString(60, surveyName2);
        }
 
        String surveyCode2 = entity.getSurveyCode2();
        if (surveyCode2 != null) {
            stmt.bindString(61, surveyCode2);
        }
 
        String surveyCeritCode = entity.getSurveyCeritCode();
        if (surveyCeritCode != null) {
            stmt.bindString(62, surveyCeritCode);
        }
 
        String surveyCeritCode2 = entity.getSurveyCeritCode2();
        if (surveyCeritCode2 != null) {
            stmt.bindString(63, surveyCeritCode2);
        }
 
        String surveyCompanyCode = entity.getSurveyCompanyCode();
        if (surveyCompanyCode != null) {
            stmt.bindString(64, surveyCompanyCode);
        }
 
        String surveyCompanyName = entity.getSurveyCompanyName();
        if (surveyCompanyName != null) {
            stmt.bindString(65, surveyCompanyName);
        }
 
        String accidentType = entity.getAccidentType();
        if (accidentType != null) {
            stmt.bindString(66, accidentType);
        }
 
        String accidentTypeCode = entity.getAccidentTypeCode();
        if (accidentTypeCode != null) {
            stmt.bindString(67, accidentTypeCode);
        }
 
        String manageType = entity.getManageType();
        if (manageType != null) {
            stmt.bindString(68, manageType);
        }
 
        String manageTypeCode = entity.getManageTypeCode();
        if (manageTypeCode != null) {
            stmt.bindString(69, manageTypeCode);
        }
 
        String accidentDuty = entity.getAccidentDuty();
        if (accidentDuty != null) {
            stmt.bindString(70, accidentDuty);
        }
 
        String accidentDutyCode = entity.getAccidentDutyCode();
        if (accidentDutyCode != null) {
            stmt.bindString(71, accidentDutyCode);
        }
 
        String accidentReason = entity.getAccidentReason();
        if (accidentReason != null) {
            stmt.bindString(72, accidentReason);
        }
 
        String accidentReasonCode = entity.getAccidentReasonCode();
        if (accidentReasonCode != null) {
            stmt.bindString(73, accidentReasonCode);
        }
 
        String roadAccidentCaseLevel = entity.getRoadAccidentCaseLevel();
        if (roadAccidentCaseLevel != null) {
            stmt.bindString(74, roadAccidentCaseLevel);
        }
 
        String roadAccidentCaseLevelCode = entity.getRoadAccidentCaseLevelCode();
        if (roadAccidentCaseLevelCode != null) {
            stmt.bindString(75, roadAccidentCaseLevelCode);
        }
 
        String dutyPercent = entity.getDutyPercent();
        if (dutyPercent != null) {
            stmt.bindString(76, dutyPercent);
        }
 
        String fieldType = entity.getFieldType();
        if (fieldType != null) {
            stmt.bindString(77, fieldType);
        }
 
        String fieldTypeCode = entity.getFieldTypeCode();
        if (fieldTypeCode != null) {
            stmt.bindString(78, fieldTypeCode);
        }
 
        String claimType = entity.getClaimType();
        if (claimType != null) {
            stmt.bindString(79, claimType);
        }
 
        String claimTypeCode = entity.getClaimTypeCode();
        if (claimTypeCode != null) {
            stmt.bindString(80, claimTypeCode);
        }
 
        String surveyType = entity.getSurveyType();
        if (surveyType != null) {
            stmt.bindString(81, surveyType);
        }
 
        String surveyTypeCode = entity.getSurveyTypeCode();
        if (surveyTypeCode != null) {
            stmt.bindString(82, surveyTypeCode);
        }
 
        String surveyNature = entity.getSurveyNature();
        if (surveyNature != null) {
            stmt.bindString(83, surveyNature);
        }
 
        String surveyNatureCode = entity.getSurveyNatureCode();
        if (surveyNatureCode != null) {
            stmt.bindString(84, surveyNatureCode);
        }
 
        String isCurrentReport = entity.getIsCurrentReport();
        if (isCurrentReport != null) {
            stmt.bindString(85, isCurrentReport);
        }
 
        String isFirstScene = entity.getIsFirstScene();
        if (isFirstScene != null) {
            stmt.bindString(86, isFirstScene);
        }
 
        String isSingleCarAccident = entity.getIsSingleCarAccident();
        if (isSingleCarAccident != null) {
            stmt.bindString(87, isSingleCarAccident);
        }
        stmt.bindDouble(88, entity.getEstimateAmount());
        stmt.bindDouble(89, entity.getEstimateSurveyAmount());
 
        String hugeType = entity.getHugeType();
        if (hugeType != null) {
            stmt.bindString(90, hugeType);
        }
 
        String hugeCode = entity.getHugeCode();
        if (hugeCode != null) {
            stmt.bindString(91, hugeCode);
        }
 
        String bigCaseFlag = entity.getBigCaseFlag();
        if (bigCaseFlag != null) {
            stmt.bindString(92, bigCaseFlag);
        }
 
        String paySelfFlag = entity.getPaySelfFlag();
        if (paySelfFlag != null) {
            stmt.bindString(93, paySelfFlag);
        }
 
        String isDesignateddriver = entity.getIsDesignateddriver();
        if (isDesignateddriver != null) {
            stmt.bindString(94, isDesignateddriver);
        }
 
        String isNoFindThird = entity.getIsNoFindThird();
        if (isNoFindThird != null) {
            stmt.bindString(95, isNoFindThird);
        }
 
        String isSubrogation = entity.getIsSubrogation();
        if (isSubrogation != null) {
            stmt.bindString(96, isSubrogation);
        }
 
        String subrogationCaseType = entity.getSubrogationCaseType();
        if (subrogationCaseType != null) {
            stmt.bindString(97, subrogationCaseType);
        }
 
        String subrogationCaseTypeCode = entity.getSubrogationCaseTypeCode();
        if (subrogationCaseTypeCode != null) {
            stmt.bindString(98, subrogationCaseTypeCode);
        }
 
        String subrogationRequisitionFlag = entity.getSubrogationRequisitionFlag();
        if (subrogationRequisitionFlag != null) {
            stmt.bindString(99, subrogationRequisitionFlag);
        }
        stmt.bindDouble(100, entity.getNoLiabilityCompensation());
 
        String entrustedClaimFlag = entity.getEntrustedClaimFlag();
        if (entrustedClaimFlag != null) {
            stmt.bindString(101, entrustedClaimFlag);
        }
 
        String dutyConfirmationType = entity.getDutyConfirmationType();
        if (dutyConfirmationType != null) {
            stmt.bindString(102, dutyConfirmationType);
        }
 
        String dutyConfirmationTypeCode = entity.getDutyConfirmationTypeCode();
        if (dutyConfirmationTypeCode != null) {
            stmt.bindString(103, dutyConfirmationTypeCode);
        }
        stmt.bindDouble(104, entity.getCarPayFromThird());
        stmt.bindDouble(105, entity.getSalvageChargesFromThird());
 
        String handleOpinion = entity.getHandleOpinion();
        if (handleOpinion != null) {
            stmt.bindString(106, handleOpinion);
        }
 
        String roadType = entity.getRoadType();
        if (roadType != null) {
            stmt.bindString(107, roadType);
        }
 
        String roadTypeCode = entity.getRoadTypeCode();
        if (roadTypeCode != null) {
            stmt.bindString(108, roadTypeCode);
        }
 
        String channelCode = entity.getChannelCode();
        if (channelCode != null) {
            stmt.bindString(109, channelCode);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(110, channelName);
        }
 
        String delFlag = entity.getDelFlag();
        if (delFlag != null) {
            stmt.bindString(111, delFlag);
        }
 
        String injureLossFlag = entity.getInjureLossFlag();
        if (injureLossFlag != null) {
            stmt.bindString(112, injureLossFlag);
        }
 
        String injureNum = entity.getInjureNum();
        if (injureNum != null) {
            stmt.bindString(113, injureNum);
        }
 
        String carLossFlag = entity.getCarLossFlag();
        if (carLossFlag != null) {
            stmt.bindString(114, carLossFlag);
        }
 
        String thiefLossFlag = entity.getThiefLossFlag();
        if (thiefLossFlag != null) {
            stmt.bindString(115, thiefLossFlag);
        }
 
        String cargoLossFlag = entity.getCargoLossFlag();
        if (cargoLossFlag != null) {
            stmt.bindString(116, cargoLossFlag);
        }
 
        String surveyTimes = entity.getSurveyTimes();
        if (surveyTimes != null) {
            stmt.bindString(117, surveyTimes);
        }
 
        String checkOpinion = entity.getCheckOpinion();
        if (checkOpinion != null) {
            stmt.bindString(118, checkOpinion);
        }
 
        String checkConclusion = entity.getCheckConclusion();
        if (checkConclusion != null) {
            stmt.bindString(119, checkConclusion);
        }
 
        String checkPersonCode = entity.getCheckPersonCode();
        if (checkPersonCode != null) {
            stmt.bindString(120, checkPersonCode);
        }
 
        String checkPersonName = entity.getCheckPersonName();
        if (checkPersonName != null) {
            stmt.bindString(121, checkPersonName);
        }
 
        String checkCompanyCode = entity.getCheckCompanyCode();
        if (checkCompanyCode != null) {
            stmt.bindString(122, checkCompanyCode);
        }
 
        String checkCompanyName = entity.getCheckCompanyName();
        if (checkCompanyName != null) {
            stmt.bindString(123, checkCompanyName);
        }
 
        String checkTime = entity.getCheckTime();
        if (checkTime != null) {
            stmt.bindString(124, checkTime);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public SurveyMainInfo readEntity(Cursor cursor, int offset) {
        SurveyMainInfo entity = new SurveyMainInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // reportNo
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // taskNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // evalId
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // forcePolicyCode
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // businessPolicyNo
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // reportType
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // reportTypeCode
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // reportTime
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // reportPersonName
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // reportPersonContact
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // reportPhone
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // insuredPersonName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // insuredPersonCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // insureCompanyCode
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // insureCompanyName
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // insureVehicleCode
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // insureVehicleName
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // companyCode
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // companyName
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // branchCompanyCode
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // branchCompanyName
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // plateNo
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // vehicleType
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // vehicleTypeCode
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // vehicleModel
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // engineModel
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // driverNo
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // driverType
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // driverTypeCode
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // vin
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // accidentFrequency
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // accidentTime
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // accidentPlace
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // accidentDescription
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // accidentCause
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // accidentCauseCode
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // driverName
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // driverLicenseType
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // driverLicenseTypeCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // driverLicenseNo
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // driverContact
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // accidentDriverType
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // accidentArea
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // accidentAreaCode
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // accidentProvince
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // accidentCity
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // accidentPlaceStreet
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // accidentPlaceZipCode
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // accidentWeather
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // longitude
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // latitude
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // surveyStartTime
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // surveyEndTime
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // surveyTime
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // surveyPlace
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // surveyDes
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // surveyName
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // surveyCode
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // surveyName2
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // surveyCode2
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // surveyCeritCode
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // surveyCeritCode2
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // surveyCompanyCode
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // surveyCompanyName
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // accidentType
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // accidentTypeCode
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // manageType
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // manageTypeCode
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // accidentDuty
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // accidentDutyCode
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // accidentReason
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // accidentReasonCode
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // roadAccidentCaseLevel
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // roadAccidentCaseLevelCode
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // dutyPercent
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // fieldType
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // fieldTypeCode
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // claimType
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // claimTypeCode
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // surveyType
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // surveyTypeCode
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // surveyNature
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // surveyNatureCode
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // isCurrentReport
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // isFirstScene
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // isSingleCarAccident
            cursor.getDouble(offset + 87), // estimateAmount
            cursor.getDouble(offset + 88), // estimateSurveyAmount
            cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89), // hugeType
            cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90), // hugeCode
            cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91), // bigCaseFlag
            cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92), // paySelfFlag
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // isDesignateddriver
            cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94), // isNoFindThird
            cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95), // isSubrogation
            cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96), // subrogationCaseType
            cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97), // subrogationCaseTypeCode
            cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98), // subrogationRequisitionFlag
            cursor.getDouble(offset + 99), // noLiabilityCompensation
            cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100), // entrustedClaimFlag
            cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101), // dutyConfirmationType
            cursor.isNull(offset + 102) ? null : cursor.getString(offset + 102), // dutyConfirmationTypeCode
            cursor.getDouble(offset + 103), // carPayFromThird
            cursor.getDouble(offset + 104), // salvageChargesFromThird
            cursor.isNull(offset + 105) ? null : cursor.getString(offset + 105), // handleOpinion
            cursor.isNull(offset + 106) ? null : cursor.getString(offset + 106), // roadType
            cursor.isNull(offset + 107) ? null : cursor.getString(offset + 107), // roadTypeCode
            cursor.isNull(offset + 108) ? null : cursor.getString(offset + 108), // channelCode
            cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109), // channelName
            cursor.isNull(offset + 110) ? null : cursor.getString(offset + 110), // delFlag
            cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111), // injureLossFlag
            cursor.isNull(offset + 112) ? null : cursor.getString(offset + 112), // injureNum
            cursor.isNull(offset + 113) ? null : cursor.getString(offset + 113), // carLossFlag
            cursor.isNull(offset + 114) ? null : cursor.getString(offset + 114), // thiefLossFlag
            cursor.isNull(offset + 115) ? null : cursor.getString(offset + 115), // cargoLossFlag
            cursor.isNull(offset + 116) ? null : cursor.getString(offset + 116), // surveyTimes
            cursor.isNull(offset + 117) ? null : cursor.getString(offset + 117), // checkOpinion
            cursor.isNull(offset + 118) ? null : cursor.getString(offset + 118), // checkConclusion
            cursor.isNull(offset + 119) ? null : cursor.getString(offset + 119), // checkPersonCode
            cursor.isNull(offset + 120) ? null : cursor.getString(offset + 120), // checkPersonName
            cursor.isNull(offset + 121) ? null : cursor.getString(offset + 121), // checkCompanyCode
            cursor.isNull(offset + 122) ? null : cursor.getString(offset + 122), // checkCompanyName
            cursor.isNull(offset + 123) ? null : cursor.getString(offset + 123) // checkTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, SurveyMainInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setReportNo(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTaskNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setEvalId(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setForcePolicyCode(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setBusinessPolicyNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setReportType(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setReportTypeCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setReportTime(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setReportPersonName(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setReportPersonContact(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setReportPhone(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setInsuredPersonName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setInsuredPersonCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setInsureCompanyCode(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setInsureCompanyName(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setInsureVehicleCode(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setInsureVehicleName(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setCompanyCode(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setCompanyName(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setBranchCompanyCode(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setBranchCompanyName(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setPlateNo(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setVehicleType(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setVehicleTypeCode(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setVehicleModel(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setEngineModel(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setDriverNo(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDriverType(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setDriverTypeCode(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setVin(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setAccidentFrequency(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setAccidentTime(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setAccidentPlace(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setAccidentDescription(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setAccidentCause(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setAccidentCauseCode(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setDriverName(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setDriverLicenseType(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setDriverLicenseTypeCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setDriverLicenseNo(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setDriverContact(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setAccidentDriverType(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setAccidentArea(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setAccidentAreaCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setAccidentProvince(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setAccidentCity(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setAccidentPlaceStreet(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setAccidentPlaceZipCode(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setAccidentWeather(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setLongitude(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setLatitude(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setSurveyStartTime(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setSurveyEndTime(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setSurveyTime(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setSurveyPlace(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setSurveyDes(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setSurveyName(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setSurveyCode(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setSurveyName2(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setSurveyCode2(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setSurveyCeritCode(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setSurveyCeritCode2(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setSurveyCompanyCode(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setSurveyCompanyName(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setAccidentType(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setAccidentTypeCode(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setManageType(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setManageTypeCode(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setAccidentDuty(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setAccidentDutyCode(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setAccidentReason(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setAccidentReasonCode(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setRoadAccidentCaseLevel(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setRoadAccidentCaseLevelCode(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setDutyPercent(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setFieldType(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setFieldTypeCode(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setClaimType(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setClaimTypeCode(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setSurveyType(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setSurveyTypeCode(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setSurveyNature(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setSurveyNatureCode(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setIsCurrentReport(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setIsFirstScene(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setIsSingleCarAccident(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setEstimateAmount(cursor.getDouble(offset + 87));
        entity.setEstimateSurveyAmount(cursor.getDouble(offset + 88));
        entity.setHugeType(cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89));
        entity.setHugeCode(cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90));
        entity.setBigCaseFlag(cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91));
        entity.setPaySelfFlag(cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92));
        entity.setIsDesignateddriver(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setIsNoFindThird(cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94));
        entity.setIsSubrogation(cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95));
        entity.setSubrogationCaseType(cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96));
        entity.setSubrogationCaseTypeCode(cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97));
        entity.setSubrogationRequisitionFlag(cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98));
        entity.setNoLiabilityCompensation(cursor.getDouble(offset + 99));
        entity.setEntrustedClaimFlag(cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100));
        entity.setDutyConfirmationType(cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101));
        entity.setDutyConfirmationTypeCode(cursor.isNull(offset + 102) ? null : cursor.getString(offset + 102));
        entity.setCarPayFromThird(cursor.getDouble(offset + 103));
        entity.setSalvageChargesFromThird(cursor.getDouble(offset + 104));
        entity.setHandleOpinion(cursor.isNull(offset + 105) ? null : cursor.getString(offset + 105));
        entity.setRoadType(cursor.isNull(offset + 106) ? null : cursor.getString(offset + 106));
        entity.setRoadTypeCode(cursor.isNull(offset + 107) ? null : cursor.getString(offset + 107));
        entity.setChannelCode(cursor.isNull(offset + 108) ? null : cursor.getString(offset + 108));
        entity.setChannelName(cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109));
        entity.setDelFlag(cursor.isNull(offset + 110) ? null : cursor.getString(offset + 110));
        entity.setInjureLossFlag(cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111));
        entity.setInjureNum(cursor.isNull(offset + 112) ? null : cursor.getString(offset + 112));
        entity.setCarLossFlag(cursor.isNull(offset + 113) ? null : cursor.getString(offset + 113));
        entity.setThiefLossFlag(cursor.isNull(offset + 114) ? null : cursor.getString(offset + 114));
        entity.setCargoLossFlag(cursor.isNull(offset + 115) ? null : cursor.getString(offset + 115));
        entity.setSurveyTimes(cursor.isNull(offset + 116) ? null : cursor.getString(offset + 116));
        entity.setCheckOpinion(cursor.isNull(offset + 117) ? null : cursor.getString(offset + 117));
        entity.setCheckConclusion(cursor.isNull(offset + 118) ? null : cursor.getString(offset + 118));
        entity.setCheckPersonCode(cursor.isNull(offset + 119) ? null : cursor.getString(offset + 119));
        entity.setCheckPersonName(cursor.isNull(offset + 120) ? null : cursor.getString(offset + 120));
        entity.setCheckCompanyCode(cursor.isNull(offset + 121) ? null : cursor.getString(offset + 121));
        entity.setCheckCompanyName(cursor.isNull(offset + 122) ? null : cursor.getString(offset + 122));
        entity.setCheckTime(cursor.isNull(offset + 123) ? null : cursor.getString(offset + 123));
     }
    
    @Override
    protected final String updateKeyAfterInsert(SurveyMainInfo entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public String getKey(SurveyMainInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(SurveyMainInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
