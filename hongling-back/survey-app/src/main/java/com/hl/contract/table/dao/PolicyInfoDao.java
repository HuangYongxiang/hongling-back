package com.hl.contract.table.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.hl.contract.table.model.PolicyInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "POLICY_INFO".
*/
public class PolicyInfoDao extends AbstractDao<PolicyInfo, String> {

    public static final String TABLENAME = "POLICY_INFO";

    /**
     * Properties of entity PolicyInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property PolicyCode = new Property(1, String.class, "policyCode", false, "POLICY_CODE");
        public final static Property ReportId = new Property(2, String.class, "reportId", false, "REPORT_ID");
        public final static Property ReportCode = new Property(3, String.class, "reportCode", false, "REPORT_CODE");
        public final static Property InsureBgnDate = new Property(4, String.class, "insureBgnDate", false, "INSURE_BGN_DATE");
        public final static Property InsureEndDate = new Property(5, String.class, "insureEndDate", false, "INSURE_END_DATE");
        public final static Property VehicleCode = new Property(6, String.class, "vehicleCode", false, "VEHICLE_CODE");
        public final static Property VehicleName = new Property(7, String.class, "vehicleName", false, "VEHICLE_NAME");
        public final static Property InsuredPerson = new Property(8, String.class, "insuredPerson", false, "INSURED_PERSON");
        public final static Property CompanyCode = new Property(9, String.class, "companyCode", false, "COMPANY_CODE");
        public final static Property CompanyName = new Property(10, String.class, "companyName", false, "COMPANY_NAME");
        public final static Property TotalInsSum = new Property(11, Double.class, "totalInsSum", false, "TOTAL_INS_SUM");
        public final static Property RiskType = new Property(12, String.class, "riskType", false, "RISK_TYPE");
        public final static Property RiskCode = new Property(13, String.class, "riskCode", false, "RISK_CODE");
        public final static Property RiskName = new Property(14, String.class, "riskName", false, "RISK_NAME");
        public final static Property CustomerTypeCode = new Property(15, String.class, "customerTypeCode", false, "CUSTOMER_TYPE_CODE");
        public final static Property CustomerTypeName = new Property(16, String.class, "customerTypeName", false, "CUSTOMER_TYPE_NAME");
        public final static Property SpecifyAssume = new Property(17, String.class, "specifyAssume", false, "SPECIFY_ASSUME");
        public final static Property ChannelCode = new Property(18, String.class, "channelCode", false, "CHANNEL_CODE");
        public final static Property ChannelName = new Property(19, String.class, "channelName", false, "CHANNEL_NAME");
        public final static Property BillDate = new Property(20, String.class, "billDate", false, "BILL_DATE");
        public final static Property PolicyHoldDate = new Property(21, String.class, "policyHoldDate", false, "POLICY_HOLD_DATE");
        public final static Property ModelName = new Property(22, String.class, "modelName", false, "MODEL_NAME");
        public final static Property CarOwner = new Property(23, String.class, "carOwner", false, "CAR_OWNER");
        public final static Property IdentityNo = new Property(24, String.class, "identityNo", false, "IDENTITY_NO");
        public final static Property DriverName = new Property(25, String.class, "driverName", false, "DRIVER_NAME");
        public final static Property ProxyInfo = new Property(26, String.class, "proxyInfo", false, "PROXY_INFO");
        public final static Property AccidentNum = new Property(27, String.class, "accidentNum", false, "ACCIDENT_NUM");
        public final static Property DealPerson = new Property(28, String.class, "dealPerson", false, "DEAL_PERSON");
        public final static Property InsuranceBranchCompanyCode = new Property(29, String.class, "insuranceBranchCompanyCode", false, "INSURANCE_BRANCH_COMPANY_CODE");
        public final static Property InsuranceBranchCompanyName = new Property(30, String.class, "insuranceBranchCompanyName", false, "INSURANCE_BRANCH_COMPANY_NAME");
    }


    public PolicyInfoDao(DaoConfig config) {
        super(config);
    }
    
    public PolicyInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"POLICY_INFO\" (" + //
                "\"ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "\"POLICY_CODE\" TEXT," + // 1: policyCode
                "\"REPORT_ID\" TEXT," + // 2: reportId
                "\"REPORT_CODE\" TEXT," + // 3: reportCode
                "\"INSURE_BGN_DATE\" TEXT," + // 4: insureBgnDate
                "\"INSURE_END_DATE\" TEXT," + // 5: insureEndDate
                "\"VEHICLE_CODE\" TEXT," + // 6: vehicleCode
                "\"VEHICLE_NAME\" TEXT," + // 7: vehicleName
                "\"INSURED_PERSON\" TEXT," + // 8: insuredPerson
                "\"COMPANY_CODE\" TEXT," + // 9: companyCode
                "\"COMPANY_NAME\" TEXT," + // 10: companyName
                "\"TOTAL_INS_SUM\" REAL," + // 11: totalInsSum
                "\"RISK_TYPE\" TEXT," + // 12: riskType
                "\"RISK_CODE\" TEXT," + // 13: riskCode
                "\"RISK_NAME\" TEXT," + // 14: riskName
                "\"CUSTOMER_TYPE_CODE\" TEXT," + // 15: customerTypeCode
                "\"CUSTOMER_TYPE_NAME\" TEXT," + // 16: customerTypeName
                "\"SPECIFY_ASSUME\" TEXT," + // 17: specifyAssume
                "\"CHANNEL_CODE\" TEXT," + // 18: channelCode
                "\"CHANNEL_NAME\" TEXT," + // 19: channelName
                "\"BILL_DATE\" TEXT," + // 20: billDate
                "\"POLICY_HOLD_DATE\" TEXT," + // 21: policyHoldDate
                "\"MODEL_NAME\" TEXT," + // 22: modelName
                "\"CAR_OWNER\" TEXT," + // 23: carOwner
                "\"IDENTITY_NO\" TEXT," + // 24: identityNo
                "\"DRIVER_NAME\" TEXT," + // 25: driverName
                "\"PROXY_INFO\" TEXT," + // 26: proxyInfo
                "\"ACCIDENT_NUM\" TEXT," + // 27: accidentNum
                "\"DEAL_PERSON\" TEXT," + // 28: dealPerson
                "\"INSURANCE_BRANCH_COMPANY_CODE\" TEXT," + // 29: insuranceBranchCompanyCode
                "\"INSURANCE_BRANCH_COMPANY_NAME\" TEXT);"); // 30: insuranceBranchCompanyName
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"POLICY_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PolicyInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String policyCode = entity.getPolicyCode();
        if (policyCode != null) {
            stmt.bindString(2, policyCode);
        }
 
        String reportId = entity.getReportId();
        if (reportId != null) {
            stmt.bindString(3, reportId);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(4, reportCode);
        }
 
        String insureBgnDate = entity.getInsureBgnDate();
        if (insureBgnDate != null) {
            stmt.bindString(5, insureBgnDate);
        }
 
        String insureEndDate = entity.getInsureEndDate();
        if (insureEndDate != null) {
            stmt.bindString(6, insureEndDate);
        }
 
        String vehicleCode = entity.getVehicleCode();
        if (vehicleCode != null) {
            stmt.bindString(7, vehicleCode);
        }
 
        String vehicleName = entity.getVehicleName();
        if (vehicleName != null) {
            stmt.bindString(8, vehicleName);
        }
 
        String insuredPerson = entity.getInsuredPerson();
        if (insuredPerson != null) {
            stmt.bindString(9, insuredPerson);
        }
 
        String companyCode = entity.getCompanyCode();
        if (companyCode != null) {
            stmt.bindString(10, companyCode);
        }
 
        String companyName = entity.getCompanyName();
        if (companyName != null) {
            stmt.bindString(11, companyName);
        }
 
        Double totalInsSum = entity.getTotalInsSum();
        if (totalInsSum != null) {
            stmt.bindDouble(12, totalInsSum);
        }
 
        String riskType = entity.getRiskType();
        if (riskType != null) {
            stmt.bindString(13, riskType);
        }
 
        String riskCode = entity.getRiskCode();
        if (riskCode != null) {
            stmt.bindString(14, riskCode);
        }
 
        String riskName = entity.getRiskName();
        if (riskName != null) {
            stmt.bindString(15, riskName);
        }
 
        String customerTypeCode = entity.getCustomerTypeCode();
        if (customerTypeCode != null) {
            stmt.bindString(16, customerTypeCode);
        }
 
        String customerTypeName = entity.getCustomerTypeName();
        if (customerTypeName != null) {
            stmt.bindString(17, customerTypeName);
        }
 
        String specifyAssume = entity.getSpecifyAssume();
        if (specifyAssume != null) {
            stmt.bindString(18, specifyAssume);
        }
 
        String channelCode = entity.getChannelCode();
        if (channelCode != null) {
            stmt.bindString(19, channelCode);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(20, channelName);
        }
 
        String billDate = entity.getBillDate();
        if (billDate != null) {
            stmt.bindString(21, billDate);
        }
 
        String policyHoldDate = entity.getPolicyHoldDate();
        if (policyHoldDate != null) {
            stmt.bindString(22, policyHoldDate);
        }
 
        String modelName = entity.getModelName();
        if (modelName != null) {
            stmt.bindString(23, modelName);
        }
 
        String carOwner = entity.getCarOwner();
        if (carOwner != null) {
            stmt.bindString(24, carOwner);
        }
 
        String identityNo = entity.getIdentityNo();
        if (identityNo != null) {
            stmt.bindString(25, identityNo);
        }
 
        String driverName = entity.getDriverName();
        if (driverName != null) {
            stmt.bindString(26, driverName);
        }
 
        String proxyInfo = entity.getProxyInfo();
        if (proxyInfo != null) {
            stmt.bindString(27, proxyInfo);
        }
 
        String accidentNum = entity.getAccidentNum();
        if (accidentNum != null) {
            stmt.bindString(28, accidentNum);
        }
 
        String dealPerson = entity.getDealPerson();
        if (dealPerson != null) {
            stmt.bindString(29, dealPerson);
        }
 
        String insuranceBranchCompanyCode = entity.getInsuranceBranchCompanyCode();
        if (insuranceBranchCompanyCode != null) {
            stmt.bindString(30, insuranceBranchCompanyCode);
        }
 
        String insuranceBranchCompanyName = entity.getInsuranceBranchCompanyName();
        if (insuranceBranchCompanyName != null) {
            stmt.bindString(31, insuranceBranchCompanyName);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PolicyInfo entity) {
        stmt.clearBindings();
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(1, id);
        }
 
        String policyCode = entity.getPolicyCode();
        if (policyCode != null) {
            stmt.bindString(2, policyCode);
        }
 
        String reportId = entity.getReportId();
        if (reportId != null) {
            stmt.bindString(3, reportId);
        }
 
        String reportCode = entity.getReportCode();
        if (reportCode != null) {
            stmt.bindString(4, reportCode);
        }
 
        String insureBgnDate = entity.getInsureBgnDate();
        if (insureBgnDate != null) {
            stmt.bindString(5, insureBgnDate);
        }
 
        String insureEndDate = entity.getInsureEndDate();
        if (insureEndDate != null) {
            stmt.bindString(6, insureEndDate);
        }
 
        String vehicleCode = entity.getVehicleCode();
        if (vehicleCode != null) {
            stmt.bindString(7, vehicleCode);
        }
 
        String vehicleName = entity.getVehicleName();
        if (vehicleName != null) {
            stmt.bindString(8, vehicleName);
        }
 
        String insuredPerson = entity.getInsuredPerson();
        if (insuredPerson != null) {
            stmt.bindString(9, insuredPerson);
        }
 
        String companyCode = entity.getCompanyCode();
        if (companyCode != null) {
            stmt.bindString(10, companyCode);
        }
 
        String companyName = entity.getCompanyName();
        if (companyName != null) {
            stmt.bindString(11, companyName);
        }
 
        Double totalInsSum = entity.getTotalInsSum();
        if (totalInsSum != null) {
            stmt.bindDouble(12, totalInsSum);
        }
 
        String riskType = entity.getRiskType();
        if (riskType != null) {
            stmt.bindString(13, riskType);
        }
 
        String riskCode = entity.getRiskCode();
        if (riskCode != null) {
            stmt.bindString(14, riskCode);
        }
 
        String riskName = entity.getRiskName();
        if (riskName != null) {
            stmt.bindString(15, riskName);
        }
 
        String customerTypeCode = entity.getCustomerTypeCode();
        if (customerTypeCode != null) {
            stmt.bindString(16, customerTypeCode);
        }
 
        String customerTypeName = entity.getCustomerTypeName();
        if (customerTypeName != null) {
            stmt.bindString(17, customerTypeName);
        }
 
        String specifyAssume = entity.getSpecifyAssume();
        if (specifyAssume != null) {
            stmt.bindString(18, specifyAssume);
        }
 
        String channelCode = entity.getChannelCode();
        if (channelCode != null) {
            stmt.bindString(19, channelCode);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(20, channelName);
        }
 
        String billDate = entity.getBillDate();
        if (billDate != null) {
            stmt.bindString(21, billDate);
        }
 
        String policyHoldDate = entity.getPolicyHoldDate();
        if (policyHoldDate != null) {
            stmt.bindString(22, policyHoldDate);
        }
 
        String modelName = entity.getModelName();
        if (modelName != null) {
            stmt.bindString(23, modelName);
        }
 
        String carOwner = entity.getCarOwner();
        if (carOwner != null) {
            stmt.bindString(24, carOwner);
        }
 
        String identityNo = entity.getIdentityNo();
        if (identityNo != null) {
            stmt.bindString(25, identityNo);
        }
 
        String driverName = entity.getDriverName();
        if (driverName != null) {
            stmt.bindString(26, driverName);
        }
 
        String proxyInfo = entity.getProxyInfo();
        if (proxyInfo != null) {
            stmt.bindString(27, proxyInfo);
        }
 
        String accidentNum = entity.getAccidentNum();
        if (accidentNum != null) {
            stmt.bindString(28, accidentNum);
        }
 
        String dealPerson = entity.getDealPerson();
        if (dealPerson != null) {
            stmt.bindString(29, dealPerson);
        }
 
        String insuranceBranchCompanyCode = entity.getInsuranceBranchCompanyCode();
        if (insuranceBranchCompanyCode != null) {
            stmt.bindString(30, insuranceBranchCompanyCode);
        }
 
        String insuranceBranchCompanyName = entity.getInsuranceBranchCompanyName();
        if (insuranceBranchCompanyName != null) {
            stmt.bindString(31, insuranceBranchCompanyName);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public PolicyInfo readEntity(Cursor cursor, int offset) {
        PolicyInfo entity = new PolicyInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // policyCode
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // reportId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // reportCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // insureBgnDate
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // insureEndDate
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // vehicleCode
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // vehicleName
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // insuredPerson
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // companyCode
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // companyName
            cursor.isNull(offset + 11) ? null : cursor.getDouble(offset + 11), // totalInsSum
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // riskType
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // riskCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // riskName
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // customerTypeCode
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // customerTypeName
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // specifyAssume
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // channelCode
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // channelName
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // billDate
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // policyHoldDate
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // modelName
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // carOwner
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // identityNo
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // driverName
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // proxyInfo
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // accidentNum
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // dealPerson
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // insuranceBranchCompanyCode
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30) // insuranceBranchCompanyName
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PolicyInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPolicyCode(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setReportId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setReportCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setInsureBgnDate(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setInsureEndDate(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setVehicleCode(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setVehicleName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setInsuredPerson(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCompanyCode(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCompanyName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setTotalInsSum(cursor.isNull(offset + 11) ? null : cursor.getDouble(offset + 11));
        entity.setRiskType(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setRiskCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setRiskName(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCustomerTypeCode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCustomerTypeName(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setSpecifyAssume(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setChannelCode(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setChannelName(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setBillDate(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPolicyHoldDate(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setModelName(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setCarOwner(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setIdentityNo(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setDriverName(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setProxyInfo(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setAccidentNum(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDealPerson(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setInsuranceBranchCompanyCode(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setInsuranceBranchCompanyName(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
     }
    
    @Override
    protected final String updateKeyAfterInsert(PolicyInfo entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public String getKey(PolicyInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(PolicyInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
